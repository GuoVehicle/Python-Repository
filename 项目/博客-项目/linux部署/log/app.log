supervisor: couldn't exec /srv/awesome/www/app.py: ENOEXEC
supervisor: child process was not spawned
supervisor: couldn't exec /srv/awesome/www/app.py: ENOEXEC
supervisor: child process was not spawned
supervisor: couldn't exec /srv/awesome/www/app.py: ENOEXEC
supervisor: child process was not spawned
supervisor: couldn't exec /srv/awesome/www/app.py: ENOEXEC
supervisor: child process was not spawned
supervisor: couldn't exec /srv/awesome/www/app.py: ENOEXEC
supervisor: child process was not spawned
supervisor: couldn't exec /srv/awesome/www/app.py: ENOEXEC
supervisor: child process was not spawned
supervisor: couldn't exec /srv/awesome/www/app.py: ENOEXEC
supervisor: child process was not spawned
supervisor: couldn't exec /srv/awesome/www/app.py: ENOEXEC
supervisor: child process was not spawned
INFO:root:found model: User (table: users)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: email ==> <StringField, varchar(50):None>
INFO:root:  found mapping: passwd ==> <StringField, varchar(50):None>
INFO:root:  found mapping: admin ==> <BooleanField, boolean:None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Blog (table: blogs)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: sort_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: summary ==> <StringField, varchar(200):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Comment (table: comments)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: blog_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Sort (table: sorts)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: class_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: updated_at ==> <FloatField, real:None>
INFO:root:  found mapping: updated_user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: updated_user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:create database connection pool...
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 488, in _connect
    await self._request_authentication()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 770, in _request_authentication
    auth_packet = await self._read_packet()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 578, in _read_packet
    packet.check_error()
  File "/usr/local/lib/python3.6/dist-packages/pymysql/protocol.py", line 220, in check_error
    err.raise_mysql_exception(self._data)
  File "/usr/local/lib/python3.6/dist-packages/pymysql/err.py", line 109, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.InternalError: (1698, "Access denied for user 'root'@'localhost'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/srv/awesome/www/app.py", line 164, in <module>
    loop.run_until_complete(init(loop))
  File "/usr/lib/python3.6/asyncio/base_events.py", line 468, in run_until_complete
    return future.result()
  File "/srv/awesome/www/app.py", line 148, in init
    await orm.create_pool(loop=loop, host='127.0.0.1', port=3306, user='root', password='664991558', db='awesome')
  File "/srv/awesome/www-18-09-10_10.22.14/orm.py", line 24, in create_pool
    loop=loop
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 29, in _create_pool
    await pool._fill_free_pool(False)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 168, in _fill_free_pool
    **self._conn_kwargs)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 77, in _connect
    await conn._connect()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 508, in _connect
    self._host) from e
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1'")
INFO:root:found model: User (table: users)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: email ==> <StringField, varchar(50):None>
INFO:root:  found mapping: passwd ==> <StringField, varchar(50):None>
INFO:root:  found mapping: admin ==> <BooleanField, boolean:None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Blog (table: blogs)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: sort_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: summary ==> <StringField, varchar(200):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Comment (table: comments)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: blog_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Sort (table: sorts)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: class_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: updated_at ==> <FloatField, real:None>
INFO:root:  found mapping: updated_user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: updated_user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:create database connection pool...
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 488, in _connect
    await self._request_authentication()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 770, in _request_authentication
    auth_packet = await self._read_packet()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 578, in _read_packet
    packet.check_error()
  File "/usr/local/lib/python3.6/dist-packages/pymysql/protocol.py", line 220, in check_error
    err.raise_mysql_exception(self._data)
  File "/usr/local/lib/python3.6/dist-packages/pymysql/err.py", line 109, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.InternalError: (1698, "Access denied for user 'root'@'localhost'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/srv/awesome/www/app.py", line 164, in <module>
    loop.run_until_complete(init(loop))
  File "/usr/lib/python3.6/asyncio/base_events.py", line 468, in run_until_complete
    return future.result()
  File "/srv/awesome/www/app.py", line 148, in init
    await orm.create_pool(loop=loop, host='127.0.0.1', port=3306, user='root', password='664991558', db='awesome')
  File "/srv/awesome/www-18-09-10_10.22.14/orm.py", line 24, in create_pool
    loop=loop
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 29, in _create_pool
    await pool._fill_free_pool(False)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 168, in _fill_free_pool
    **self._conn_kwargs)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 77, in _connect
    await conn._connect()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 508, in _connect
    self._host) from e
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1'")
INFO:root:found model: User (table: users)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: email ==> <StringField, varchar(50):None>
INFO:root:  found mapping: passwd ==> <StringField, varchar(50):None>
INFO:root:  found mapping: admin ==> <BooleanField, boolean:None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Blog (table: blogs)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: sort_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: summary ==> <StringField, varchar(200):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Comment (table: comments)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: blog_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Sort (table: sorts)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: class_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: updated_at ==> <FloatField, real:None>
INFO:root:  found mapping: updated_user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: updated_user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:create database connection pool...
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 488, in _connect
    await self._request_authentication()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 770, in _request_authentication
    auth_packet = await self._read_packet()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 578, in _read_packet
    packet.check_error()
  File "/usr/local/lib/python3.6/dist-packages/pymysql/protocol.py", line 220, in check_error
    err.raise_mysql_exception(self._data)
  File "/usr/local/lib/python3.6/dist-packages/pymysql/err.py", line 109, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.InternalError: (1698, "Access denied for user 'root'@'localhost'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/srv/awesome/www/app.py", line 164, in <module>
    loop.run_until_complete(init(loop))
  File "/usr/lib/python3.6/asyncio/base_events.py", line 468, in run_until_complete
    return future.result()
  File "/srv/awesome/www/app.py", line 148, in init
    await orm.create_pool(loop=loop, host='127.0.0.1', port=3306, user='root', password='664991558', db='awesome')
  File "/srv/awesome/www-18-09-10_10.22.14/orm.py", line 24, in create_pool
    loop=loop
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 29, in _create_pool
    await pool._fill_free_pool(False)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 168, in _fill_free_pool
    **self._conn_kwargs)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 77, in _connect
    await conn._connect()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 508, in _connect
    self._host) from e
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1'")
INFO:root:found model: User (table: users)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: email ==> <StringField, varchar(50):None>
INFO:root:  found mapping: passwd ==> <StringField, varchar(50):None>
INFO:root:  found mapping: admin ==> <BooleanField, boolean:None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Blog (table: blogs)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: sort_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: summary ==> <StringField, varchar(200):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Comment (table: comments)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: blog_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Sort (table: sorts)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: class_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: updated_at ==> <FloatField, real:None>
INFO:root:  found mapping: updated_user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: updated_user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:create database connection pool...
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 488, in _connect
    await self._request_authentication()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 770, in _request_authentication
    auth_packet = await self._read_packet()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 578, in _read_packet
    packet.check_error()
  File "/usr/local/lib/python3.6/dist-packages/pymysql/protocol.py", line 220, in check_error
    err.raise_mysql_exception(self._data)
  File "/usr/local/lib/python3.6/dist-packages/pymysql/err.py", line 109, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.InternalError: (1698, "Access denied for user 'root'@'localhost'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/srv/awesome/www/app.py", line 164, in <module>
    loop.run_until_complete(init(loop))
  File "/usr/lib/python3.6/asyncio/base_events.py", line 468, in run_until_complete
    return future.result()
  File "/srv/awesome/www/app.py", line 148, in init
    await orm.create_pool(loop=loop, host='127.0.0.1', port=3306, user='root', password='664991558', db='awesome')
  File "/srv/awesome/www-18-09-10_10.22.14/orm.py", line 24, in create_pool
    loop=loop
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 29, in _create_pool
    await pool._fill_free_pool(False)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 168, in _fill_free_pool
    **self._conn_kwargs)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 77, in _connect
    await conn._connect()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 508, in _connect
    self._host) from e
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1'")
INFO:root:found model: User (table: users)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: email ==> <StringField, varchar(50):None>
INFO:root:  found mapping: passwd ==> <StringField, varchar(50):None>
INFO:root:  found mapping: admin ==> <BooleanField, boolean:None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Blog (table: blogs)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: sort_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: summary ==> <StringField, varchar(200):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Comment (table: comments)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: blog_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Sort (table: sorts)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: class_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: updated_at ==> <FloatField, real:None>
INFO:root:  found mapping: updated_user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: updated_user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:create database connection pool...
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 488, in _connect
    await self._request_authentication()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 770, in _request_authentication
    auth_packet = await self._read_packet()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 578, in _read_packet
    packet.check_error()
  File "/usr/local/lib/python3.6/dist-packages/pymysql/protocol.py", line 220, in check_error
    err.raise_mysql_exception(self._data)
  File "/usr/local/lib/python3.6/dist-packages/pymysql/err.py", line 109, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.InternalError: (1698, "Access denied for user 'root'@'localhost'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/srv/awesome/www/app.py", line 164, in <module>
    loop.run_until_complete(init(loop))
  File "/usr/lib/python3.6/asyncio/base_events.py", line 468, in run_until_complete
    return future.result()
  File "/srv/awesome/www/app.py", line 148, in init
    await orm.create_pool(loop=loop, host='127.0.0.1', port=3306, user='root', password='664991558', db='awesome')
  File "/srv/awesome/www-18-09-10_10.22.14/orm.py", line 24, in create_pool
    loop=loop
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 29, in _create_pool
    await pool._fill_free_pool(False)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 168, in _fill_free_pool
    **self._conn_kwargs)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 77, in _connect
    await conn._connect()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 508, in _connect
    self._host) from e
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1'")
INFO:root:found model: User (table: users)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: email ==> <StringField, varchar(50):None>
INFO:root:  found mapping: passwd ==> <StringField, varchar(50):None>
INFO:root:  found mapping: admin ==> <BooleanField, boolean:None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Blog (table: blogs)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: sort_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: summary ==> <StringField, varchar(200):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Comment (table: comments)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: blog_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Sort (table: sorts)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: class_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: updated_at ==> <FloatField, real:None>
INFO:root:  found mapping: updated_user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: updated_user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:create database connection pool...
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 488, in _connect
    await self._request_authentication()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 770, in _request_authentication
    auth_packet = await self._read_packet()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 578, in _read_packet
    packet.check_error()
  File "/usr/local/lib/python3.6/dist-packages/pymysql/protocol.py", line 220, in check_error
    err.raise_mysql_exception(self._data)
  File "/usr/local/lib/python3.6/dist-packages/pymysql/err.py", line 109, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.InternalError: (1698, "Access denied for user 'root'@'localhost'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/srv/awesome/www/app.py", line 164, in <module>
    loop.run_until_complete(init(loop))
  File "/usr/lib/python3.6/asyncio/base_events.py", line 468, in run_until_complete
    return future.result()
  File "/srv/awesome/www/app.py", line 148, in init
    await orm.create_pool(loop=loop, host='127.0.0.1', port=3306, user='root', password='', db='awesome')
  File "/srv/awesome/www-18-09-10_10.38.16/orm.py", line 24, in create_pool
    loop=loop
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 29, in _create_pool
    await pool._fill_free_pool(False)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 168, in _fill_free_pool
    **self._conn_kwargs)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 77, in _connect
    await conn._connect()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 508, in _connect
    self._host) from e
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1'")
INFO:root:found model: User (table: users)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: email ==> <StringField, varchar(50):None>
INFO:root:  found mapping: passwd ==> <StringField, varchar(50):None>
INFO:root:  found mapping: admin ==> <BooleanField, boolean:None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Blog (table: blogs)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: sort_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: summary ==> <StringField, varchar(200):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Comment (table: comments)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: blog_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Sort (table: sorts)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: class_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: updated_at ==> <FloatField, real:None>
INFO:root:  found mapping: updated_user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: updated_user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:create database connection pool...
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 488, in _connect
    await self._request_authentication()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 770, in _request_authentication
    auth_packet = await self._read_packet()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 578, in _read_packet
    packet.check_error()
  File "/usr/local/lib/python3.6/dist-packages/pymysql/protocol.py", line 220, in check_error
    err.raise_mysql_exception(self._data)
  File "/usr/local/lib/python3.6/dist-packages/pymysql/err.py", line 109, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.InternalError: (1698, "Access denied for user 'root'@'localhost'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/srv/awesome/www/app.py", line 164, in <module>
    loop.run_until_complete(init(loop))
  File "/usr/lib/python3.6/asyncio/base_events.py", line 468, in run_until_complete
    return future.result()
  File "/srv/awesome/www/app.py", line 148, in init
    await orm.create_pool(loop=loop, host='127.0.0.1', port=3306, user='root', password='', db='awesome')
  File "/srv/awesome/www-18-09-10_10.38.16/orm.py", line 24, in create_pool
    loop=loop
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 29, in _create_pool
    await pool._fill_free_pool(False)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 168, in _fill_free_pool
    **self._conn_kwargs)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 77, in _connect
    await conn._connect()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 508, in _connect
    self._host) from e
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1'")
INFO:root:found model: User (table: users)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: email ==> <StringField, varchar(50):None>
INFO:root:  found mapping: passwd ==> <StringField, varchar(50):None>
INFO:root:  found mapping: admin ==> <BooleanField, boolean:None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Blog (table: blogs)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: sort_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: summary ==> <StringField, varchar(200):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Comment (table: comments)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: blog_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Sort (table: sorts)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: class_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: updated_at ==> <FloatField, real:None>
INFO:root:  found mapping: updated_user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: updated_user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:create database connection pool...
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 488, in _connect
    await self._request_authentication()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 770, in _request_authentication
    auth_packet = await self._read_packet()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 578, in _read_packet
    packet.check_error()
  File "/usr/local/lib/python3.6/dist-packages/pymysql/protocol.py", line 220, in check_error
    err.raise_mysql_exception(self._data)
  File "/usr/local/lib/python3.6/dist-packages/pymysql/err.py", line 109, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.InternalError: (1698, "Access denied for user 'root'@'localhost'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/srv/awesome/www/app.py", line 164, in <module>
    loop.run_until_complete(init(loop))
  File "/usr/lib/python3.6/asyncio/base_events.py", line 468, in run_until_complete
    return future.result()
  File "/srv/awesome/www/app.py", line 148, in init
    await orm.create_pool(loop=loop, host='127.0.0.1', port=3306, user='root', password='', db='awesome')
  File "/srv/awesome/www-18-09-10_10.38.16/orm.py", line 24, in create_pool
    loop=loop
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 29, in _create_pool
    await pool._fill_free_pool(False)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 168, in _fill_free_pool
    **self._conn_kwargs)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 77, in _connect
    await conn._connect()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 508, in _connect
    self._host) from e
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1'")
INFO:root:found model: User (table: users)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: email ==> <StringField, varchar(50):None>
INFO:root:  found mapping: passwd ==> <StringField, varchar(50):None>
INFO:root:  found mapping: admin ==> <BooleanField, boolean:None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Blog (table: blogs)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: sort_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: summary ==> <StringField, varchar(200):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Comment (table: comments)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: blog_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Sort (table: sorts)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: class_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: updated_at ==> <FloatField, real:None>
INFO:root:  found mapping: updated_user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: updated_user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:create database connection pool...
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 488, in _connect
    await self._request_authentication()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 770, in _request_authentication
    auth_packet = await self._read_packet()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 578, in _read_packet
    packet.check_error()
  File "/usr/local/lib/python3.6/dist-packages/pymysql/protocol.py", line 220, in check_error
    err.raise_mysql_exception(self._data)
  File "/usr/local/lib/python3.6/dist-packages/pymysql/err.py", line 109, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.InternalError: (1698, "Access denied for user 'root'@'localhost'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/srv/awesome/www/app.py", line 164, in <module>
    loop.run_until_complete(init(loop))
  File "/usr/lib/python3.6/asyncio/base_events.py", line 468, in run_until_complete
    return future.result()
  File "/srv/awesome/www/app.py", line 148, in init
    await orm.create_pool(loop=loop, host='127.0.0.1', port=3306, user='root', password='', db='awesome')
  File "/srv/awesome/www-18-09-10_10.38.16/orm.py", line 24, in create_pool
    loop=loop
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 29, in _create_pool
    await pool._fill_free_pool(False)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 168, in _fill_free_pool
    **self._conn_kwargs)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 77, in _connect
    await conn._connect()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 508, in _connect
    self._host) from e
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1'")
INFO:root:found model: User (table: users)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: email ==> <StringField, varchar(50):None>
INFO:root:  found mapping: passwd ==> <StringField, varchar(50):None>
INFO:root:  found mapping: admin ==> <BooleanField, boolean:None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Blog (table: blogs)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: sort_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: summary ==> <StringField, varchar(200):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Comment (table: comments)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: blog_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Sort (table: sorts)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: class_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: updated_at ==> <FloatField, real:None>
INFO:root:  found mapping: updated_user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: updated_user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:create database connection pool...
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 488, in _connect
    await self._request_authentication()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 770, in _request_authentication
    auth_packet = await self._read_packet()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 578, in _read_packet
    packet.check_error()
  File "/usr/local/lib/python3.6/dist-packages/pymysql/protocol.py", line 220, in check_error
    err.raise_mysql_exception(self._data)
  File "/usr/local/lib/python3.6/dist-packages/pymysql/err.py", line 109, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.InternalError: (1698, "Access denied for user 'root'@'localhost'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/srv/awesome/www/app.py", line 164, in <module>
    loop.run_until_complete(init(loop))
  File "/usr/lib/python3.6/asyncio/base_events.py", line 468, in run_until_complete
    return future.result()
  File "/srv/awesome/www/app.py", line 148, in init
    await orm.create_pool(loop=loop, host='127.0.0.1', port=3306, user='root', password='664991558', db='awesome')
  File "/srv/awesome/www-18-09-10_10.51.26/orm.py", line 24, in create_pool
    loop=loop
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 29, in _create_pool
    await pool._fill_free_pool(False)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 168, in _fill_free_pool
    **self._conn_kwargs)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 77, in _connect
    await conn._connect()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 508, in _connect
    self._host) from e
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1'")
INFO:root:found model: User (table: users)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: email ==> <StringField, varchar(50):None>
INFO:root:  found mapping: passwd ==> <StringField, varchar(50):None>
INFO:root:  found mapping: admin ==> <BooleanField, boolean:None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Blog (table: blogs)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: sort_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: summary ==> <StringField, varchar(200):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Comment (table: comments)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: blog_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Sort (table: sorts)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: class_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: updated_at ==> <FloatField, real:None>
INFO:root:  found mapping: updated_user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: updated_user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:create database connection pool...
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 488, in _connect
    await self._request_authentication()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 770, in _request_authentication
    auth_packet = await self._read_packet()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 578, in _read_packet
    packet.check_error()
  File "/usr/local/lib/python3.6/dist-packages/pymysql/protocol.py", line 220, in check_error
    err.raise_mysql_exception(self._data)
  File "/usr/local/lib/python3.6/dist-packages/pymysql/err.py", line 109, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.InternalError: (1698, "Access denied for user 'root'@'localhost'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/srv/awesome/www/app.py", line 164, in <module>
    loop.run_until_complete(init(loop))
  File "/usr/lib/python3.6/asyncio/base_events.py", line 468, in run_until_complete
    return future.result()
  File "/srv/awesome/www/app.py", line 148, in init
    await orm.create_pool(loop=loop, host='127.0.0.1', port=3306, user='root', password='664991558', db='awesome')
  File "/srv/awesome/www-18-09-10_10.51.26/orm.py", line 24, in create_pool
    loop=loop
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 29, in _create_pool
    await pool._fill_free_pool(False)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 168, in _fill_free_pool
    **self._conn_kwargs)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 77, in _connect
    await conn._connect()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 508, in _connect
    self._host) from e
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1'")
INFO:root:found model: User (table: users)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: email ==> <StringField, varchar(50):None>
INFO:root:  found mapping: passwd ==> <StringField, varchar(50):None>
INFO:root:  found mapping: admin ==> <BooleanField, boolean:None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Blog (table: blogs)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: sort_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: summary ==> <StringField, varchar(200):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Comment (table: comments)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: blog_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Sort (table: sorts)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: class_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: updated_at ==> <FloatField, real:None>
INFO:root:  found mapping: updated_user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: updated_user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:create database connection pool...
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 488, in _connect
    await self._request_authentication()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 770, in _request_authentication
    auth_packet = await self._read_packet()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 578, in _read_packet
    packet.check_error()
  File "/usr/local/lib/python3.6/dist-packages/pymysql/protocol.py", line 220, in check_error
    err.raise_mysql_exception(self._data)
  File "/usr/local/lib/python3.6/dist-packages/pymysql/err.py", line 109, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.InternalError: (1698, "Access denied for user 'root'@'localhost'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/srv/awesome/www/app.py", line 164, in <module>
    loop.run_until_complete(init(loop))
  File "/usr/lib/python3.6/asyncio/base_events.py", line 468, in run_until_complete
    return future.result()
  File "/srv/awesome/www/app.py", line 148, in init
    await orm.create_pool(loop=loop, host='127.0.0.1', port=3306, user='root', password='664991558', db='awesome')
  File "/srv/awesome/www-18-09-10_10.51.26/orm.py", line 24, in create_pool
    loop=loop
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 29, in _create_pool
    await pool._fill_free_pool(False)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 168, in _fill_free_pool
    **self._conn_kwargs)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 77, in _connect
    await conn._connect()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 508, in _connect
    self._host) from e
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1'")
INFO:root:found model: User (table: users)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: email ==> <StringField, varchar(50):None>
INFO:root:  found mapping: passwd ==> <StringField, varchar(50):None>
INFO:root:  found mapping: admin ==> <BooleanField, boolean:None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Blog (table: blogs)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: sort_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: summary ==> <StringField, varchar(200):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Comment (table: comments)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: blog_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Sort (table: sorts)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: class_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: updated_at ==> <FloatField, real:None>
INFO:root:  found mapping: updated_user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: updated_user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:create database connection pool...
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 488, in _connect
    await self._request_authentication()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 770, in _request_authentication
    auth_packet = await self._read_packet()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 578, in _read_packet
    packet.check_error()
  File "/usr/local/lib/python3.6/dist-packages/pymysql/protocol.py", line 220, in check_error
    err.raise_mysql_exception(self._data)
  File "/usr/local/lib/python3.6/dist-packages/pymysql/err.py", line 109, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.InternalError: (1698, "Access denied for user 'root'@'localhost'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/srv/awesome/www/app.py", line 164, in <module>
    loop.run_until_complete(init(loop))
  File "/usr/lib/python3.6/asyncio/base_events.py", line 468, in run_until_complete
    return future.result()
  File "/srv/awesome/www/app.py", line 148, in init
    await orm.create_pool(loop=loop, host='127.0.0.1', port=3306, user='root', password='664991558', db='awesome')
  File "/srv/awesome/www-18-09-10_10.51.26/orm.py", line 24, in create_pool
    loop=loop
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 29, in _create_pool
    await pool._fill_free_pool(False)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 168, in _fill_free_pool
    **self._conn_kwargs)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 77, in _connect
    await conn._connect()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 508, in _connect
    self._host) from e
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1'")
INFO:root:found model: User (table: users)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: email ==> <StringField, varchar(50):None>
INFO:root:  found mapping: passwd ==> <StringField, varchar(50):None>
INFO:root:  found mapping: admin ==> <BooleanField, boolean:None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Blog (table: blogs)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: sort_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: summary ==> <StringField, varchar(200):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Comment (table: comments)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: blog_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Sort (table: sorts)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: class_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: updated_at ==> <FloatField, real:None>
INFO:root:  found mapping: updated_user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: updated_user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:create database connection pool...
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 488, in _connect
    await self._request_authentication()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 770, in _request_authentication
    auth_packet = await self._read_packet()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 578, in _read_packet
    packet.check_error()
  File "/usr/local/lib/python3.6/dist-packages/pymysql/protocol.py", line 220, in check_error
    err.raise_mysql_exception(self._data)
  File "/usr/local/lib/python3.6/dist-packages/pymysql/err.py", line 109, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.InternalError: (1698, "Access denied for user 'root'@'localhost'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/srv/awesome/www/app.py", line 164, in <module>
    loop.run_until_complete(init(loop))
  File "/usr/lib/python3.6/asyncio/base_events.py", line 468, in run_until_complete
    return future.result()
  File "/srv/awesome/www/app.py", line 148, in init
    await orm.create_pool(loop=loop, host='127.0.0.1', port=3306, user='root', password='664991558', db='awesome')
  File "/srv/awesome/www-18-09-10_10.53.07/orm.py", line 24, in create_pool
    loop=loop
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 29, in _create_pool
    await pool._fill_free_pool(False)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 168, in _fill_free_pool
    **self._conn_kwargs)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 77, in _connect
    await conn._connect()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 508, in _connect
    self._host) from e
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1'")
INFO:root:found model: User (table: users)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: email ==> <StringField, varchar(50):None>
INFO:root:  found mapping: passwd ==> <StringField, varchar(50):None>
INFO:root:  found mapping: admin ==> <BooleanField, boolean:None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Blog (table: blogs)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: sort_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: summary ==> <StringField, varchar(200):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Comment (table: comments)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: blog_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Sort (table: sorts)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: class_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: updated_at ==> <FloatField, real:None>
INFO:root:  found mapping: updated_user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: updated_user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:create database connection pool...
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 488, in _connect
    await self._request_authentication()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 770, in _request_authentication
    auth_packet = await self._read_packet()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 578, in _read_packet
    packet.check_error()
  File "/usr/local/lib/python3.6/dist-packages/pymysql/protocol.py", line 220, in check_error
    err.raise_mysql_exception(self._data)
  File "/usr/local/lib/python3.6/dist-packages/pymysql/err.py", line 109, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.InternalError: (1698, "Access denied for user 'root'@'localhost'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/srv/awesome/www/app.py", line 164, in <module>
    loop.run_until_complete(init(loop))
  File "/usr/lib/python3.6/asyncio/base_events.py", line 468, in run_until_complete
    return future.result()
  File "/srv/awesome/www/app.py", line 148, in init
    await orm.create_pool(loop=loop, host='127.0.0.1', port=3306, user='root', password='664991558', db='awesome')
  File "/srv/awesome/www-18-09-10_10.53.07/orm.py", line 24, in create_pool
    loop=loop
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 29, in _create_pool
    await pool._fill_free_pool(False)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 168, in _fill_free_pool
    **self._conn_kwargs)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 77, in _connect
    await conn._connect()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 508, in _connect
    self._host) from e
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1'")
INFO:root:found model: User (table: users)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: email ==> <StringField, varchar(50):None>
INFO:root:  found mapping: passwd ==> <StringField, varchar(50):None>
INFO:root:  found mapping: admin ==> <BooleanField, boolean:None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Blog (table: blogs)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: sort_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: summary ==> <StringField, varchar(200):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Comment (table: comments)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: blog_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Sort (table: sorts)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: class_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: updated_at ==> <FloatField, real:None>
INFO:root:  found mapping: updated_user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: updated_user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:create database connection pool...
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 488, in _connect
    await self._request_authentication()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 770, in _request_authentication
    auth_packet = await self._read_packet()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 578, in _read_packet
    packet.check_error()
  File "/usr/local/lib/python3.6/dist-packages/pymysql/protocol.py", line 220, in check_error
    err.raise_mysql_exception(self._data)
  File "/usr/local/lib/python3.6/dist-packages/pymysql/err.py", line 109, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.InternalError: (1698, "Access denied for user 'root'@'localhost'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/srv/awesome/www/app.py", line 164, in <module>
    loop.run_until_complete(init(loop))
  File "/usr/lib/python3.6/asyncio/base_events.py", line 468, in run_until_complete
    return future.result()
  File "/srv/awesome/www/app.py", line 148, in init
    await orm.create_pool(loop=loop, host='127.0.0.1', port=3306, user='root', password='664991558', db='awesome')
  File "/srv/awesome/www-18-09-10_10.53.07/orm.py", line 24, in create_pool
    loop=loop
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 29, in _create_pool
    await pool._fill_free_pool(False)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 168, in _fill_free_pool
    **self._conn_kwargs)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 77, in _connect
    await conn._connect()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 508, in _connect
    self._host) from e
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1'")
INFO:root:found model: User (table: users)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: email ==> <StringField, varchar(50):None>
INFO:root:  found mapping: passwd ==> <StringField, varchar(50):None>
INFO:root:  found mapping: admin ==> <BooleanField, boolean:None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Blog (table: blogs)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: sort_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: summary ==> <StringField, varchar(200):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Comment (table: comments)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: blog_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Sort (table: sorts)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: class_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: updated_at ==> <FloatField, real:None>
INFO:root:  found mapping: updated_user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: updated_user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:create database connection pool...
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 488, in _connect
    await self._request_authentication()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 770, in _request_authentication
    auth_packet = await self._read_packet()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 578, in _read_packet
    packet.check_error()
  File "/usr/local/lib/python3.6/dist-packages/pymysql/protocol.py", line 220, in check_error
    err.raise_mysql_exception(self._data)
  File "/usr/local/lib/python3.6/dist-packages/pymysql/err.py", line 109, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.InternalError: (1698, "Access denied for user 'root'@'localhost'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/srv/awesome/www/app.py", line 164, in <module>
    loop.run_until_complete(init(loop))
  File "/usr/lib/python3.6/asyncio/base_events.py", line 468, in run_until_complete
    return future.result()
  File "/srv/awesome/www/app.py", line 148, in init
    await orm.create_pool(loop=loop, host='127.0.0.1', port=3306, user='root', password='664991558', db='awesome')
  File "/srv/awesome/www-18-09-10_10.53.07/orm.py", line 24, in create_pool
    loop=loop
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 29, in _create_pool
    await pool._fill_free_pool(False)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 168, in _fill_free_pool
    **self._conn_kwargs)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 77, in _connect
    await conn._connect()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 508, in _connect
    self._host) from e
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1'")
INFO:root:found model: User (table: users)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: email ==> <StringField, varchar(50):None>
INFO:root:  found mapping: passwd ==> <StringField, varchar(50):None>
INFO:root:  found mapping: admin ==> <BooleanField, boolean:None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Blog (table: blogs)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: sort_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: summary ==> <StringField, varchar(200):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Comment (table: comments)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: blog_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Sort (table: sorts)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: class_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: updated_at ==> <FloatField, real:None>
INFO:root:  found mapping: updated_user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: updated_user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:create database connection pool...
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 488, in _connect
    await self._request_authentication()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 770, in _request_authentication
    auth_packet = await self._read_packet()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 578, in _read_packet
    packet.check_error()
  File "/usr/local/lib/python3.6/dist-packages/pymysql/protocol.py", line 220, in check_error
    err.raise_mysql_exception(self._data)
  File "/usr/local/lib/python3.6/dist-packages/pymysql/err.py", line 109, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.InternalError: (1698, "Access denied for user 'root'@'localhost'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/srv/awesome/www/app.py", line 164, in <module>
    loop.run_until_complete(init(loop))
  File "/usr/lib/python3.6/asyncio/base_events.py", line 468, in run_until_complete
    return future.result()
  File "/srv/awesome/www/app.py", line 148, in init
    await orm.create_pool(loop=loop, host='127.0.0.1', port=3306, user='root', password='123', db='awesome')
  File "/srv/awesome/www-18-09-11_14.58.09/orm.py", line 24, in create_pool
    loop=loop
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 29, in _create_pool
    await pool._fill_free_pool(False)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 168, in _fill_free_pool
    **self._conn_kwargs)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 77, in _connect
    await conn._connect()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 508, in _connect
    self._host) from e
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1'")
INFO:root:found model: User (table: users)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: email ==> <StringField, varchar(50):None>
INFO:root:  found mapping: passwd ==> <StringField, varchar(50):None>
INFO:root:  found mapping: admin ==> <BooleanField, boolean:None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Blog (table: blogs)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: sort_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: summary ==> <StringField, varchar(200):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Comment (table: comments)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: blog_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Sort (table: sorts)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: class_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: updated_at ==> <FloatField, real:None>
INFO:root:  found mapping: updated_user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: updated_user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:create database connection pool...
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 488, in _connect
    await self._request_authentication()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 770, in _request_authentication
    auth_packet = await self._read_packet()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 578, in _read_packet
    packet.check_error()
  File "/usr/local/lib/python3.6/dist-packages/pymysql/protocol.py", line 220, in check_error
    err.raise_mysql_exception(self._data)
  File "/usr/local/lib/python3.6/dist-packages/pymysql/err.py", line 109, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.InternalError: (1698, "Access denied for user 'root'@'localhost'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/srv/awesome/www/app.py", line 164, in <module>
    loop.run_until_complete(init(loop))
  File "/usr/lib/python3.6/asyncio/base_events.py", line 468, in run_until_complete
    return future.result()
  File "/srv/awesome/www/app.py", line 148, in init
    await orm.create_pool(loop=loop, host='127.0.0.1', port=3306, user='root', password='123', db='awesome')
  File "/srv/awesome/www-18-09-11_14.58.09/orm.py", line 24, in create_pool
    loop=loop
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 29, in _create_pool
    await pool._fill_free_pool(False)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 168, in _fill_free_pool
    **self._conn_kwargs)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 77, in _connect
    await conn._connect()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 508, in _connect
    self._host) from e
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1'")
INFO:root:found model: User (table: users)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: email ==> <StringField, varchar(50):None>
INFO:root:  found mapping: passwd ==> <StringField, varchar(50):None>
INFO:root:  found mapping: admin ==> <BooleanField, boolean:None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Blog (table: blogs)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: sort_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: summary ==> <StringField, varchar(200):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Comment (table: comments)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: blog_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Sort (table: sorts)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: class_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: updated_at ==> <FloatField, real:None>
INFO:root:  found mapping: updated_user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: updated_user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:create database connection pool...
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 488, in _connect
    await self._request_authentication()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 770, in _request_authentication
    auth_packet = await self._read_packet()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 578, in _read_packet
    packet.check_error()
  File "/usr/local/lib/python3.6/dist-packages/pymysql/protocol.py", line 220, in check_error
    err.raise_mysql_exception(self._data)
  File "/usr/local/lib/python3.6/dist-packages/pymysql/err.py", line 109, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.InternalError: (1698, "Access denied for user 'root'@'localhost'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/srv/awesome/www/app.py", line 164, in <module>
    loop.run_until_complete(init(loop))
  File "/usr/lib/python3.6/asyncio/base_events.py", line 468, in run_until_complete
    return future.result()
  File "/srv/awesome/www/app.py", line 148, in init
    await orm.create_pool(loop=loop, host='127.0.0.1', port=3306, user='root', password='123', db='awesome')
  File "/srv/awesome/www-18-09-11_14.58.09/orm.py", line 24, in create_pool
    loop=loop
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 29, in _create_pool
    await pool._fill_free_pool(False)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 168, in _fill_free_pool
    **self._conn_kwargs)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 77, in _connect
    await conn._connect()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 508, in _connect
    self._host) from e
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1'")
INFO:root:found model: User (table: users)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: email ==> <StringField, varchar(50):None>
INFO:root:  found mapping: passwd ==> <StringField, varchar(50):None>
INFO:root:  found mapping: admin ==> <BooleanField, boolean:None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Blog (table: blogs)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: sort_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: summary ==> <StringField, varchar(200):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Comment (table: comments)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: blog_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Sort (table: sorts)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: class_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: updated_at ==> <FloatField, real:None>
INFO:root:  found mapping: updated_user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: updated_user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:create database connection pool...
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 488, in _connect
    await self._request_authentication()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 770, in _request_authentication
    auth_packet = await self._read_packet()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 578, in _read_packet
    packet.check_error()
  File "/usr/local/lib/python3.6/dist-packages/pymysql/protocol.py", line 220, in check_error
    err.raise_mysql_exception(self._data)
  File "/usr/local/lib/python3.6/dist-packages/pymysql/err.py", line 109, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.InternalError: (1698, "Access denied for user 'root'@'localhost'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/srv/awesome/www/app.py", line 164, in <module>
    loop.run_until_complete(init(loop))
  File "/usr/lib/python3.6/asyncio/base_events.py", line 468, in run_until_complete
    return future.result()
  File "/srv/awesome/www/app.py", line 148, in init
    await orm.create_pool(loop=loop, host='127.0.0.1', port=3306, user='root', password='123', db='awesome')
  File "/srv/awesome/www-18-09-11_14.58.09/orm.py", line 24, in create_pool
    loop=loop
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 29, in _create_pool
    await pool._fill_free_pool(False)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 168, in _fill_free_pool
    **self._conn_kwargs)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 77, in _connect
    await conn._connect()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 508, in _connect
    self._host) from e
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '127.0.0.1'")
INFO:root:found model: User (table: users)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: email ==> <StringField, varchar(50):None>
INFO:root:  found mapping: passwd ==> <StringField, varchar(50):None>
INFO:root:  found mapping: admin ==> <BooleanField, boolean:None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Blog (table: blogs)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: sort_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: summary ==> <StringField, varchar(200):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Comment (table: comments)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: blog_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Sort (table: sorts)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: class_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: updated_at ==> <FloatField, real:None>
INFO:root:  found mapping: updated_user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: updated_user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:create database connection pool...
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 488, in _connect
    await self._request_authentication()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 770, in _request_authentication
    auth_packet = await self._read_packet()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 578, in _read_packet
    packet.check_error()
  File "/usr/local/lib/python3.6/dist-packages/pymysql/protocol.py", line 220, in check_error
    err.raise_mysql_exception(self._data)
  File "/usr/local/lib/python3.6/dist-packages/pymysql/err.py", line 109, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.InternalError: (1698, "Access denied for user 'root'@'gdk'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/srv/awesome/www/app.py", line 165, in <module>
    loop.run_until_complete(init(loop))
  File "/usr/lib/python3.6/asyncio/base_events.py", line 468, in run_until_complete
    return future.result()
  File "/srv/awesome/www/app.py", line 148, in init
    await orm.create_pool(loop=loop, host='192.168.189.135', port=3306, user='root', password='123', db='awesome')
  File "/srv/awesome/www-18-09-11_15.11.18/orm.py", line 24, in create_pool
    loop=loop
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 29, in _create_pool
    await pool._fill_free_pool(False)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 168, in _fill_free_pool
    **self._conn_kwargs)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 77, in _connect
    await conn._connect()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 508, in _connect
    self._host) from e
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '192.168.189.135'")
INFO:root:found model: User (table: users)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: email ==> <StringField, varchar(50):None>
INFO:root:  found mapping: passwd ==> <StringField, varchar(50):None>
INFO:root:  found mapping: admin ==> <BooleanField, boolean:None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Blog (table: blogs)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: sort_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: summary ==> <StringField, varchar(200):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Comment (table: comments)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: blog_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Sort (table: sorts)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: class_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: updated_at ==> <FloatField, real:None>
INFO:root:  found mapping: updated_user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: updated_user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:create database connection pool...
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 488, in _connect
    await self._request_authentication()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 770, in _request_authentication
    auth_packet = await self._read_packet()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 578, in _read_packet
    packet.check_error()
  File "/usr/local/lib/python3.6/dist-packages/pymysql/protocol.py", line 220, in check_error
    err.raise_mysql_exception(self._data)
  File "/usr/local/lib/python3.6/dist-packages/pymysql/err.py", line 109, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.InternalError: (1698, "Access denied for user 'root'@'gdk'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/srv/awesome/www/app.py", line 165, in <module>
    loop.run_until_complete(init(loop))
  File "/usr/lib/python3.6/asyncio/base_events.py", line 468, in run_until_complete
    return future.result()
  File "/srv/awesome/www/app.py", line 148, in init
    await orm.create_pool(loop=loop, host='192.168.189.135', port=3306, user='root', password='123', db='awesome')
  File "/srv/awesome/www-18-09-11_15.11.18/orm.py", line 24, in create_pool
    loop=loop
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 29, in _create_pool
    await pool._fill_free_pool(False)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 168, in _fill_free_pool
    **self._conn_kwargs)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 77, in _connect
    await conn._connect()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 508, in _connect
    self._host) from e
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '192.168.189.135'")
INFO:root:found model: User (table: users)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: email ==> <StringField, varchar(50):None>
INFO:root:  found mapping: passwd ==> <StringField, varchar(50):None>
INFO:root:  found mapping: admin ==> <BooleanField, boolean:None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Blog (table: blogs)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: sort_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: summary ==> <StringField, varchar(200):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Comment (table: comments)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: blog_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Sort (table: sorts)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: class_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: updated_at ==> <FloatField, real:None>
INFO:root:  found mapping: updated_user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: updated_user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:create database connection pool...
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 488, in _connect
    await self._request_authentication()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 770, in _request_authentication
    auth_packet = await self._read_packet()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 578, in _read_packet
    packet.check_error()
  File "/usr/local/lib/python3.6/dist-packages/pymysql/protocol.py", line 220, in check_error
    err.raise_mysql_exception(self._data)
  File "/usr/local/lib/python3.6/dist-packages/pymysql/err.py", line 109, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.InternalError: (1698, "Access denied for user 'root'@'gdk'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/srv/awesome/www/app.py", line 165, in <module>
    loop.run_until_complete(init(loop))
  File "/usr/lib/python3.6/asyncio/base_events.py", line 468, in run_until_complete
    return future.result()
  File "/srv/awesome/www/app.py", line 148, in init
    await orm.create_pool(loop=loop, host='192.168.189.135', port=3306, user='root', password='123', db='awesome')
  File "/srv/awesome/www-18-09-11_15.11.18/orm.py", line 24, in create_pool
    loop=loop
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 29, in _create_pool
    await pool._fill_free_pool(False)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 168, in _fill_free_pool
    **self._conn_kwargs)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 77, in _connect
    await conn._connect()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 508, in _connect
    self._host) from e
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '192.168.189.135'")
INFO:root:found model: User (table: users)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: email ==> <StringField, varchar(50):None>
INFO:root:  found mapping: passwd ==> <StringField, varchar(50):None>
INFO:root:  found mapping: admin ==> <BooleanField, boolean:None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Blog (table: blogs)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: sort_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: summary ==> <StringField, varchar(200):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Comment (table: comments)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: blog_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Sort (table: sorts)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: class_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: updated_at ==> <FloatField, real:None>
INFO:root:  found mapping: updated_user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: updated_user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:create database connection pool...
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 488, in _connect
    await self._request_authentication()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 770, in _request_authentication
    auth_packet = await self._read_packet()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 578, in _read_packet
    packet.check_error()
  File "/usr/local/lib/python3.6/dist-packages/pymysql/protocol.py", line 220, in check_error
    err.raise_mysql_exception(self._data)
  File "/usr/local/lib/python3.6/dist-packages/pymysql/err.py", line 109, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.InternalError: (1698, "Access denied for user 'root'@'gdk'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/srv/awesome/www/app.py", line 165, in <module>
    loop.run_until_complete(init(loop))
  File "/usr/lib/python3.6/asyncio/base_events.py", line 468, in run_until_complete
    return future.result()
  File "/srv/awesome/www/app.py", line 148, in init
    await orm.create_pool(loop=loop, host='192.168.189.135', port=3306, user='root', password='123', db='awesome')
  File "/srv/awesome/www-18-09-11_15.11.18/orm.py", line 24, in create_pool
    loop=loop
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 29, in _create_pool
    await pool._fill_free_pool(False)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/pool.py", line 168, in _fill_free_pool
    **self._conn_kwargs)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 77, in _connect
    await conn._connect()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 508, in _connect
    self._host) from e
pymysql.err.OperationalError: (2003, "Can't connect to MySQL server on '192.168.189.135'")
INFO:root:found model: User (table: users)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: email ==> <StringField, varchar(50):None>
INFO:root:  found mapping: passwd ==> <StringField, varchar(50):None>
INFO:root:  found mapping: admin ==> <BooleanField, boolean:None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Blog (table: blogs)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: sort_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: summary ==> <StringField, varchar(200):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Comment (table: comments)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: blog_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Sort (table: sorts)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: class_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: updated_at ==> <FloatField, real:None>
INFO:root:  found mapping: updated_user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: updated_user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:create database connection pool...
INFO:root:init jinja2...<Application 0x7f5389c4ffd0>
INFO:root:set jinja2 template path: /srv/awesome/www/templates
INFO:root:add_routes...handlers
INFO:root:mod...<module 'handlers' from '/srv/awesome/www-18-09-11_15.44.22/handlers.py'>
INFO:root:fn...<class 'apis.APIError'>
INFO:root:fn...<class 'apis.APIPermissionError'>
INFO:root:fn...<class 'apis.APIResourceNotFoundError'>
INFO:root:fn...<class 'apis.APIValueError'>
INFO:root:fn...<class 'models.Blog'>
INFO:root:fn...awesession
INFO:root:fn...<class 'models.Comment'>
INFO:root:fn...<class 'apis.Page'>
INFO:root:fn...<class 'models.Sort'>
INFO:root:fn...<class 'models.User'>
INFO:root:fn...<function api_blogs at 0x7f5389c5f598>
INFO:root:add route GET /api/blogs => api_blogs(page, name, sortid, page_size)
INFO:root:fn...<function api_comments at 0x7f5389c5fbf8>
INFO:root:add route GET /api/comments => api_comments(page)
INFO:root:fn...<function api_create_blog at 0x7f5389c632f0>
INFO:root:add route POST /api/blogs => api_create_blog(request, name, summary, content, sort_id)
INFO:root:fn...<function api_create_comment at 0x7f5389c631e0>
INFO:root:add route POST /api/blogs/{id}/comments => api_create_comment(id, request, content)
INFO:root:fn...<function api_create_sort at 0x7f5389c63620>
INFO:root:add route POST /api/sorts => api_create_sort(request, class_name)
INFO:root:fn...<function api_delete_blog at 0x7f5389c63510>
INFO:root:add route POST /api/blogs/{id}/delete => api_delete_blog(id, request)
INFO:root:fn...<function api_delete_comments at 0x7f5389c63950>
INFO:root:add route POST /api/comments/{id}/delete => api_delete_comments(id, request)
INFO:root:fn...<function api_delete_sort at 0x7f5389c63840>
INFO:root:add route POST /api/sorts/{id}/delete => api_delete_sort(id, request)
INFO:root:fn...<function api_delete_users at 0x7f5389c63b70>
INFO:root:add route POST /api/users/{id}/delete => api_delete_users(id, request)
INFO:root:fn...<function api_get_blog at 0x7f5389c5f8c8>
INFO:root:add route GET /api/blogs/{id} => api_get_blog(id, request)
INFO:root:fn...<function api_get_sort at 0x7f5389c5f378>
INFO:root:add route GET /api/sorts/{id} => api_get_sort(id, request)
INFO:root:fn...<function api_get_users at 0x7f5389c5fe18>
INFO:root:add route GET /api/users => api_get_users(page)
INFO:root:fn...<function api_register_user at 0x7f5389c5ff28>
INFO:root:add route POST /api/users => api_register_user(email, name, password)
INFO:root:fn...<function api_sorts at 0x7f5389c5f048>
INFO:root:add route GET /api/sorts => api_sorts(page)
INFO:root:fn...<function api_update_blog at 0x7f5389c63400>
INFO:root:add route POST /api/blogs/{id} => api_update_blog(id, request, name, summary, content, sort_id)
INFO:root:fn...<function api_update_pwd_users at 0x7f5389c63d90>
INFO:root:add route POST /api/users/pwd/{id}/update => api_update_pwd_users(id, request, passwd, passwd2)
INFO:root:fn...<function api_update_sort at 0x7f5389c63730>
INFO:root:add route POST /api/sorts/{id} => api_update_sort(id, request, class_name)
INFO:root:fn...<function api_update_users at 0x7f5389c63a60>
INFO:root:add route POST /api/users/{id}/edit => api_update_users(id, request)
INFO:root:fn...<function api_updates_users at 0x7f5389c63c80>
INFO:root:add route POST /api/users/{id}/update => api_updates_users(id, request, name)
INFO:root:fn...<module 'asyncio' from '/usr/lib/python3.6/asyncio/__init__.py'>
INFO:root:fn...<function authenticate at 0x7f5389c630d0>
INFO:root:add route POST /api/authenticate => authenticate(email, passwd)
INFO:root:fn...<module 'base64' from '/usr/lib/python3.6/base64.py'>
INFO:root:fn...<function check_admin at 0x7f5389f7e620>
INFO:root:fn...{'debug': True, 'db': {'host': '127.0.0.1', 'port': 3306, 'user': 'root', 'password': '664991558', 'db': 'awesome'}, 'session': {'secret': 'Awesome'}}
INFO:root:fn...<function cookie2user at 0x7f5389c63f28>
INFO:root:fn...<function execute at 0x7f538a1edd90>
INFO:root:fn...<function get at 0x7f538a1efae8>
INFO:root:fn...<function get_blog at 0x7f5389c5db70>
INFO:root:add route GET /blog/{id} => get_blog(id, request)
INFO:root:fn...<function get_page_index at 0x7f5389c63e18>
INFO:root:fn...<function get_pwd at 0x7f5389c5dd90>
INFO:root:add route GET /pwd/{id} => get_pwd(id, request)
INFO:root:fn...<function get_user at 0x7f5389c5dc80>
INFO:root:add route GET /user/{id} => get_user(id, request)
INFO:root:fn...<module 'hashlib' from '/usr/lib/python3.6/hashlib.py'>
INFO:root:fn...<function index at 0x7f5389c5d730>
INFO:root:add route GET / => index(request, page, sortid)
INFO:root:fn...<module 'json' from '/usr/lib/python3.6/json/__init__.py'>
INFO:root:fn...<module 'logging' from '/usr/lib/python3.6/logging/__init__.py'>
INFO:root:fn...<function login at 0x7f5389c5d950>
INFO:root:add route GET /signin => login()
INFO:root:fn...<function manage at 0x7f5389c5f9d8>
INFO:root:add route GET /manage/ => manage()
INFO:root:fn...<function manage_blogs at 0x7f5389c5f488>
INFO:root:add route GET /manage/blogs => manage_blogs(page, name, request)
INFO:root:fn...<function manage_comments at 0x7f5389c5fae8>
INFO:root:add route GET /manage/comments => manage_comments(request, page)
INFO:root:fn...<function manage_create_blog at 0x7f5389c5f6a8>
INFO:root:add route GET /manage/blogs/create => manage_create_blog(request)
INFO:root:fn...<function manage_create_sort at 0x7f5389c5f158>
INFO:root:add route GET /manage/sorts/create => manage_create_sort(request)
INFO:root:fn...<function manage_edit_blog at 0x7f5389c5f7b8>
INFO:root:add route GET /manage/blogs/edit => manage_edit_blog(request, id)
INFO:root:fn...<function manage_edit_sort at 0x7f5389c5f268>
INFO:root:add route GET /manage/sorts/edit => manage_edit_sort(request, id)
INFO:root:fn...<function manage_sorts at 0x7f5389c5dea0>
INFO:root:add route GET /manage/sorts => manage_sorts(page, request)
INFO:root:fn...<function manage_users at 0x7f5389c5fd08>
INFO:root:add route GET /manage/users => manage_users(request, page)
INFO:root:fn...<module 'markdown2' from '/srv/awesome/www-18-09-11_15.44.22/markdown2.py'>
INFO:root:fn...<function next_id at 0x7f5389f6c7b8>
INFO:root:fn...<function post at 0x7f5389f6cb70>
INFO:root:fn...<module 're' from '/usr/lib/python3.6/re.py'>
INFO:root:fn...<function register at 0x7f5389c5d840>
INFO:root:add route GET /register => register()
INFO:root:fn...<function select at 0x7f538a1c5e18>
INFO:root:fn...<function signout at 0x7f5389c5da60>
INFO:root:add route GET /signout => signout(request)
INFO:root:fn...<function text2html at 0x7f5389c67048>
INFO:root:fn...<module 'time' (built-in)>
INFO:root:fn...<function user2cookie at 0x7f5389c63ea0>
INFO:root:fn...<module 'aiohttp.web' from '/usr/local/lib/python3.6/dist-packages/aiohttp/web.py'>
INFO:root:add static /static/ => /srv/awesome/www-18-09-11_15.44.22/static
INFO:root:server started at http://127.0.0.1:9000...
INFO:root:found model: User (table: users)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: email ==> <StringField, varchar(50):None>
INFO:root:  found mapping: passwd ==> <StringField, varchar(50):None>
INFO:root:  found mapping: admin ==> <BooleanField, boolean:None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Blog (table: blogs)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: sort_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: summary ==> <StringField, varchar(200):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Comment (table: comments)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: blog_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Sort (table: sorts)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: class_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: updated_at ==> <FloatField, real:None>
INFO:root:  found mapping: updated_user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: updated_user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:create database connection pool...
INFO:root:init jinja2...<Application 0x7f1f3af09048>
INFO:root:set jinja2 template path: /srv/awesome/www/templates
INFO:root:add_routes...handlers
INFO:root:mod...<module 'handlers' from '/srv/awesome/www-18-09-11_16.26.53/handlers.py'>
INFO:root:fn...<class 'apis.APIError'>
INFO:root:fn...<class 'apis.APIPermissionError'>
INFO:root:fn...<class 'apis.APIResourceNotFoundError'>
INFO:root:fn...<class 'apis.APIValueError'>
INFO:root:fn...<class 'models.Blog'>
INFO:root:fn...awesession
INFO:root:fn...<class 'models.Comment'>
INFO:root:fn...<class 'apis.Page'>
INFO:root:fn...<class 'models.Sort'>
INFO:root:fn...<class 'models.User'>
INFO:root:fn...<function api_blogs at 0x7f1f3acfd598>
INFO:root:add route GET /api/blogs => api_blogs(page, name, sortid, page_size)
INFO:root:fn...<function api_comments at 0x7f1f3acfdbf8>
INFO:root:add route GET /api/comments => api_comments(page)
INFO:root:fn...<function api_create_blog at 0x7f1f3ad012f0>
INFO:root:add route POST /api/blogs => api_create_blog(request, name, summary, content, sort_id)
INFO:root:fn...<function api_create_comment at 0x7f1f3ad011e0>
INFO:root:add route POST /api/blogs/{id}/comments => api_create_comment(id, request, content)
INFO:root:fn...<function api_create_sort at 0x7f1f3ad01620>
INFO:root:add route POST /api/sorts => api_create_sort(request, class_name)
INFO:root:fn...<function api_delete_blog at 0x7f1f3ad01510>
INFO:root:add route POST /api/blogs/{id}/delete => api_delete_blog(id, request)
INFO:root:fn...<function api_delete_comments at 0x7f1f3ad01950>
INFO:root:add route POST /api/comments/{id}/delete => api_delete_comments(id, request)
INFO:root:fn...<function api_delete_sort at 0x7f1f3ad01840>
INFO:root:add route POST /api/sorts/{id}/delete => api_delete_sort(id, request)
INFO:root:fn...<function api_delete_users at 0x7f1f3ad01b70>
INFO:root:add route POST /api/users/{id}/delete => api_delete_users(id, request)
INFO:root:fn...<function api_get_blog at 0x7f1f3acfd8c8>
INFO:root:add route GET /api/blogs/{id} => api_get_blog(id, request)
INFO:root:fn...<function api_get_sort at 0x7f1f3acfd378>
INFO:root:add route GET /api/sorts/{id} => api_get_sort(id, request)
INFO:root:fn...<function api_get_users at 0x7f1f3acfde18>
INFO:root:add route GET /api/users => api_get_users(page)
INFO:root:fn...<function api_register_user at 0x7f1f3acfdf28>
INFO:root:add route POST /api/users => api_register_user(email, name, password)
INFO:root:fn...<function api_sorts at 0x7f1f3acfd048>
INFO:root:add route GET /api/sorts => api_sorts(page)
INFO:root:fn...<function api_update_blog at 0x7f1f3ad01400>
INFO:root:add route POST /api/blogs/{id} => api_update_blog(id, request, name, summary, content, sort_id)
INFO:root:fn...<function api_update_pwd_users at 0x7f1f3ad01d90>
INFO:root:add route POST /api/users/pwd/{id}/update => api_update_pwd_users(id, request, passwd, passwd2)
INFO:root:fn...<function api_update_sort at 0x7f1f3ad01730>
INFO:root:add route POST /api/sorts/{id} => api_update_sort(id, request, class_name)
INFO:root:fn...<function api_update_users at 0x7f1f3ad01a60>
INFO:root:add route POST /api/users/{id}/edit => api_update_users(id, request)
INFO:root:fn...<function api_updates_users at 0x7f1f3ad01c80>
INFO:root:add route POST /api/users/{id}/update => api_updates_users(id, request, name)
INFO:root:fn...<module 'asyncio' from '/usr/lib/python3.6/asyncio/__init__.py'>
INFO:root:fn...<function authenticate at 0x7f1f3ad010d0>
INFO:root:add route POST /api/authenticate => authenticate(email, passwd)
INFO:root:fn...<module 'base64' from '/usr/lib/python3.6/base64.py'>
INFO:root:fn...<function check_admin at 0x7f1f3b01c620>
INFO:root:fn...{'debug': True, 'db': {'host': '127.0.0.1', 'port': 3306, 'user': 'root', 'password': '664991558', 'db': 'awesome'}, 'session': {'secret': 'Awesome'}}
INFO:root:fn...<function cookie2user at 0x7f1f3ad01f28>
INFO:root:fn...<function execute at 0x7f1f3b28bd90>
INFO:root:fn...<function get at 0x7f1f3b28dae8>
INFO:root:fn...<function get_blog at 0x7f1f3acfbb70>
INFO:root:add route GET /blog/{id} => get_blog(id, request)
INFO:root:fn...<function get_page_index at 0x7f1f3ad01e18>
INFO:root:fn...<function get_pwd at 0x7f1f3acfbd90>
INFO:root:add route GET /pwd/{id} => get_pwd(id, request)
INFO:root:fn...<function get_user at 0x7f1f3acfbc80>
INFO:root:add route GET /user/{id} => get_user(id, request)
INFO:root:fn...<module 'hashlib' from '/usr/lib/python3.6/hashlib.py'>
INFO:root:fn...<function index at 0x7f1f3acfb730>
INFO:root:add route GET / => index(request, page, sortid)
INFO:root:fn...<module 'json' from '/usr/lib/python3.6/json/__init__.py'>
INFO:root:fn...<module 'logging' from '/usr/lib/python3.6/logging/__init__.py'>
INFO:root:fn...<function login at 0x7f1f3acfb950>
INFO:root:add route GET /signin => login()
INFO:root:fn...<function manage at 0x7f1f3acfd9d8>
INFO:root:add route GET /manage/ => manage()
INFO:root:fn...<function manage_blogs at 0x7f1f3acfd488>
INFO:root:add route GET /manage/blogs => manage_blogs(page, name, request)
INFO:root:fn...<function manage_comments at 0x7f1f3acfdae8>
INFO:root:add route GET /manage/comments => manage_comments(request, page)
INFO:root:fn...<function manage_create_blog at 0x7f1f3acfd6a8>
INFO:root:add route GET /manage/blogs/create => manage_create_blog(request)
INFO:root:fn...<function manage_create_sort at 0x7f1f3acfd158>
INFO:root:add route GET /manage/sorts/create => manage_create_sort(request)
INFO:root:fn...<function manage_edit_blog at 0x7f1f3acfd7b8>
INFO:root:add route GET /manage/blogs/edit => manage_edit_blog(request, id)
INFO:root:fn...<function manage_edit_sort at 0x7f1f3acfd268>
INFO:root:add route GET /manage/sorts/edit => manage_edit_sort(request, id)
INFO:root:fn...<function manage_sorts at 0x7f1f3acfbea0>
INFO:root:add route GET /manage/sorts => manage_sorts(page, request)
INFO:root:fn...<function manage_users at 0x7f1f3acfdd08>
INFO:root:add route GET /manage/users => manage_users(request, page)
INFO:root:fn...<module 'markdown2' from '/srv/awesome/www-18-09-11_16.26.53/markdown2.py'>
INFO:root:fn...<function next_id at 0x7f1f3b00a7b8>
INFO:root:fn...<function post at 0x7f1f3b00ab70>
INFO:root:fn...<module 're' from '/usr/lib/python3.6/re.py'>
INFO:root:fn...<function register at 0x7f1f3acfb840>
INFO:root:add route GET /register => register()
INFO:root:fn...<function select at 0x7f1f3b263e18>
INFO:root:fn...<function signout at 0x7f1f3acfba60>
INFO:root:add route GET /signout => signout(request)
INFO:root:fn...<function text2html at 0x7f1f3ad05048>
INFO:root:fn...<module 'time' (built-in)>
INFO:root:fn...<function user2cookie at 0x7f1f3ad01ea0>
INFO:root:fn...<module 'aiohttp.web' from '/usr/local/lib/python3.6/dist-packages/aiohttp/web.py'>
INFO:root:add static /static/ => /srv/awesome/www-18-09-11_16.26.53/static
INFO:root:server started at http://127.0.0.1:9000...
INFO:root:Request: GET /
INFO:root:check user: GET /
INFO:root:Response handler...
INFO:root:call with args: {'request': <Request GET / >}
INFO:root:SQL: select id,class_name,(select count(1) from blogs where sort_id=sorts.id) as nums  from `sorts` order by created_at desc
INFO:root:sql888888888:select id,class_name,(select count(1) from blogs where sort_id=sorts.id) as nums  from `sorts` order by created_at desc[]
ERROR:aiohttp.server:Error handling request
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/aiohttp/web_protocol.py", line 390, in start
    resp = await self._request_handler(request)
  File "/usr/local/lib/python3.6/dist-packages/aiohttp/web_app.py", line 366, in _handle
    resp = await handler(request)
  File "/usr/local/lib/python3.6/dist-packages/aiohttp/web_middlewares.py", line 106, in impl
    return await handler(request)
  File "/srv/awesome/www/app.py", line 46, in logger
    return (await handler(request))
  File "/srv/awesome/www/app.py", line 114, in auth
    return (await handler(request))
  File "/srv/awesome/www/app.py", line 65, in response
    r = await handler(request)
  File "/usr/local/lib/python3.6/dist-packages/aiohttp/web_urldispatcher.py", line 120, in handler_wrapper
    result = await result
  File "/srv/awesome/www-18-09-11_16.26.53/coroweb.py", line 161, in __call__
    r = await self._func(**kw)
  File "/usr/lib/python3.6/asyncio/coroutines.py", line 225, in coro
    res = yield from await_meth()
  File "/srv/awesome/www-18-09-11_16.26.53/handlers.py", line 79, in index
    sorts = await Sort.finddefineAll(sorts_sql, orderBy='created_at desc')
  File "/srv/awesome/www-18-09-11_16.26.53/orm.py", line 244, in finddefineAll
    rs = await select(' '.join(sql), args)
  File "/srv/awesome/www-18-09-11_16.26.53/orm.py", line 34, in select
    await cur.execute(sql.replace('?', '%s'), args or ())
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/cursors.py", line 237, in execute
    await self._query(query)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/cursors.py", line 455, in _query
    await conn.query(q)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 420, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 607, in _read_query_result
    await result.read()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 1089, in read
    first_packet = await self.connection._read_packet()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 578, in _read_packet
    packet.check_error()
  File "/usr/local/lib/python3.6/dist-packages/pymysql/protocol.py", line 220, in check_error
    err.raise_mysql_exception(self._data)
  File "/usr/local/lib/python3.6/dist-packages/pymysql/err.py", line 109, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.OperationalError: (1142, "SELECT command denied to user 'gdk'@'localhost' for table 'sorts'")
INFO:aiohttp.access:192.168.189.1 [11/Sep/2018:15:27:46 +0000] "GET / HTTP/1.1" 500 330 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:62.0) Gecko/20100101 Firefox/62.0"
INFO:root:Request: GET /favicon.ico
INFO:root:check user: GET /favicon.ico
INFO:root:Response handler...
INFO:aiohttp.access:192.168.189.1 [11/Sep/2018:15:27:46 +0000] "GET /favicon.ico HTTP/1.1" 404 172 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:62.0) Gecko/20100101 Firefox/62.0"
INFO:root:Request: GET /favicon.ico
INFO:root:check user: GET /favicon.ico
INFO:root:Response handler...
INFO:aiohttp.access:192.168.189.1 [11/Sep/2018:15:27:46 +0000] "GET /favicon.ico HTTP/1.1" 404 172 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:62.0) Gecko/20100101 Firefox/62.0"
INFO:root:found model: User (table: users)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: email ==> <StringField, varchar(50):None>
INFO:root:  found mapping: passwd ==> <StringField, varchar(50):None>
INFO:root:  found mapping: admin ==> <BooleanField, boolean:None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Blog (table: blogs)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: sort_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: summary ==> <StringField, varchar(200):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Comment (table: comments)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: blog_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Sort (table: sorts)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: class_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: updated_at ==> <FloatField, real:None>
INFO:root:  found mapping: updated_user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: updated_user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:create database connection pool...
INFO:root:init jinja2...<Application 0x7fa7d9df9048>
INFO:root:set jinja2 template path: /srv/awesome/www/templates
INFO:root:add_routes...handlers
INFO:root:mod...<module 'handlers' from '/srv/awesome/www-18-09-11_16.30.28/handlers.py'>
INFO:root:fn...<class 'apis.APIError'>
INFO:root:fn...<class 'apis.APIPermissionError'>
INFO:root:fn...<class 'apis.APIResourceNotFoundError'>
INFO:root:fn...<class 'apis.APIValueError'>
INFO:root:fn...<class 'models.Blog'>
INFO:root:fn...awesession
INFO:root:fn...<class 'models.Comment'>
INFO:root:fn...<class 'apis.Page'>
INFO:root:fn...<class 'models.Sort'>
INFO:root:fn...<class 'models.User'>
INFO:root:fn...<function api_blogs at 0x7fa7d9beb598>
INFO:root:add route GET /api/blogs => api_blogs(page, name, sortid, page_size)
INFO:root:fn...<function api_comments at 0x7fa7d9bebbf8>
INFO:root:add route GET /api/comments => api_comments(page)
INFO:root:fn...<function api_create_blog at 0x7fa7d9bef2f0>
INFO:root:add route POST /api/blogs => api_create_blog(request, name, summary, content, sort_id)
INFO:root:fn...<function api_create_comment at 0x7fa7d9bef1e0>
INFO:root:add route POST /api/blogs/{id}/comments => api_create_comment(id, request, content)
INFO:root:fn...<function api_create_sort at 0x7fa7d9bef620>
INFO:root:add route POST /api/sorts => api_create_sort(request, class_name)
INFO:root:fn...<function api_delete_blog at 0x7fa7d9bef510>
INFO:root:add route POST /api/blogs/{id}/delete => api_delete_blog(id, request)
INFO:root:fn...<function api_delete_comments at 0x7fa7d9bef950>
INFO:root:add route POST /api/comments/{id}/delete => api_delete_comments(id, request)
INFO:root:fn...<function api_delete_sort at 0x7fa7d9bef840>
INFO:root:add route POST /api/sorts/{id}/delete => api_delete_sort(id, request)
INFO:root:fn...<function api_delete_users at 0x7fa7d9befb70>
INFO:root:add route POST /api/users/{id}/delete => api_delete_users(id, request)
INFO:root:fn...<function api_get_blog at 0x7fa7d9beb8c8>
INFO:root:add route GET /api/blogs/{id} => api_get_blog(id, request)
INFO:root:fn...<function api_get_sort at 0x7fa7d9beb378>
INFO:root:add route GET /api/sorts/{id} => api_get_sort(id, request)
INFO:root:fn...<function api_get_users at 0x7fa7d9bebe18>
INFO:root:add route GET /api/users => api_get_users(page)
INFO:root:fn...<function api_register_user at 0x7fa7d9bebf28>
INFO:root:add route POST /api/users => api_register_user(email, name, password)
INFO:root:fn...<function api_sorts at 0x7fa7d9beb048>
INFO:root:add route GET /api/sorts => api_sorts(page)
INFO:root:fn...<function api_update_blog at 0x7fa7d9bef400>
INFO:root:add route POST /api/blogs/{id} => api_update_blog(id, request, name, summary, content, sort_id)
INFO:root:fn...<function api_update_pwd_users at 0x7fa7d9befd90>
INFO:root:add route POST /api/users/pwd/{id}/update => api_update_pwd_users(id, request, passwd, passwd2)
INFO:root:fn...<function api_update_sort at 0x7fa7d9bef730>
INFO:root:add route POST /api/sorts/{id} => api_update_sort(id, request, class_name)
INFO:root:fn...<function api_update_users at 0x7fa7d9befa60>
INFO:root:add route POST /api/users/{id}/edit => api_update_users(id, request)
INFO:root:fn...<function api_updates_users at 0x7fa7d9befc80>
INFO:root:add route POST /api/users/{id}/update => api_updates_users(id, request, name)
INFO:root:fn...<module 'asyncio' from '/usr/lib/python3.6/asyncio/__init__.py'>
INFO:root:fn...<function authenticate at 0x7fa7d9bef0d0>
INFO:root:add route POST /api/authenticate => authenticate(email, passwd)
INFO:root:fn...<module 'base64' from '/usr/lib/python3.6/base64.py'>
INFO:root:fn...<function check_admin at 0x7fa7d9f0a620>
INFO:root:fn...{'debug': True, 'db': {'host': '127.0.0.1', 'port': 3306, 'user': 'root', 'password': '664991558', 'db': 'awesome'}, 'session': {'secret': 'Awesome'}}
INFO:root:fn...<function cookie2user at 0x7fa7d9beff28>
INFO:root:fn...<function execute at 0x7fa7da179d90>
INFO:root:fn...<function get at 0x7fa7da17aae8>
INFO:root:fn...<function get_blog at 0x7fa7d9be9b70>
INFO:root:add route GET /blog/{id} => get_blog(id, request)
INFO:root:fn...<function get_page_index at 0x7fa7d9befe18>
INFO:root:fn...<function get_pwd at 0x7fa7d9be9d90>
INFO:root:add route GET /pwd/{id} => get_pwd(id, request)
INFO:root:fn...<function get_user at 0x7fa7d9be9c80>
INFO:root:add route GET /user/{id} => get_user(id, request)
INFO:root:fn...<module 'hashlib' from '/usr/lib/python3.6/hashlib.py'>
INFO:root:fn...<function index at 0x7fa7d9be9730>
INFO:root:add route GET / => index(request, page, sortid)
INFO:root:fn...<module 'json' from '/usr/lib/python3.6/json/__init__.py'>
INFO:root:fn...<module 'logging' from '/usr/lib/python3.6/logging/__init__.py'>
INFO:root:fn...<function login at 0x7fa7d9be9950>
INFO:root:add route GET /signin => login()
INFO:root:fn...<function manage at 0x7fa7d9beb9d8>
INFO:root:add route GET /manage/ => manage()
INFO:root:fn...<function manage_blogs at 0x7fa7d9beb488>
INFO:root:add route GET /manage/blogs => manage_blogs(page, name, request)
INFO:root:fn...<function manage_comments at 0x7fa7d9bebae8>
INFO:root:add route GET /manage/comments => manage_comments(request, page)
INFO:root:fn...<function manage_create_blog at 0x7fa7d9beb6a8>
INFO:root:add route GET /manage/blogs/create => manage_create_blog(request)
INFO:root:fn...<function manage_create_sort at 0x7fa7d9beb158>
INFO:root:add route GET /manage/sorts/create => manage_create_sort(request)
INFO:root:fn...<function manage_edit_blog at 0x7fa7d9beb7b8>
INFO:root:add route GET /manage/blogs/edit => manage_edit_blog(request, id)
INFO:root:fn...<function manage_edit_sort at 0x7fa7d9beb268>
INFO:root:add route GET /manage/sorts/edit => manage_edit_sort(request, id)
INFO:root:fn...<function manage_sorts at 0x7fa7d9be9ea0>
INFO:root:add route GET /manage/sorts => manage_sorts(page, request)
INFO:root:fn...<function manage_users at 0x7fa7d9bebd08>
INFO:root:add route GET /manage/users => manage_users(request, page)
INFO:root:fn...<module 'markdown2' from '/srv/awesome/www-18-09-11_16.30.28/markdown2.py'>
INFO:root:fn...<function next_id at 0x7fa7d9ef87b8>
INFO:root:fn...<function post at 0x7fa7d9ef8b70>
INFO:root:fn...<module 're' from '/usr/lib/python3.6/re.py'>
INFO:root:fn...<function register at 0x7fa7d9be9840>
INFO:root:add route GET /register => register()
INFO:root:fn...<function select at 0x7fa7da151e18>
INFO:root:fn...<function signout at 0x7fa7d9be9a60>
INFO:root:add route GET /signout => signout(request)
INFO:root:fn...<function text2html at 0x7fa7d9bf3048>
INFO:root:fn...<module 'time' (built-in)>
INFO:root:fn...<function user2cookie at 0x7fa7d9befea0>
INFO:root:fn...<module 'aiohttp.web' from '/usr/local/lib/python3.6/dist-packages/aiohttp/web.py'>
INFO:root:add static /static/ => /srv/awesome/www-18-09-11_16.30.28/static
Traceback (most recent call last):
  File "/usr/lib/python3.6/asyncio/base_events.py", line 1045, in create_server
    sock.bind(sa)
PermissionError: [Errno 13] Permission denied

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/srv/awesome/www/app.py", line 165, in <module>
    loop.run_until_complete(init(loop))
  File "/usr/lib/python3.6/asyncio/base_events.py", line 468, in run_until_complete
    return future.result()
  File "/srv/awesome/www/app.py", line 160, in init
    srv = await loop.create_server(app.make_handler(), '0.0.0.0', 80)
  File "/usr/lib/python3.6/asyncio/base_events.py", line 1049, in create_server
    % (sa, err.strerror.lower()))
PermissionError: [Errno 13] error while attempting to bind on address ('0.0.0.0', 80): permission denied
INFO:root:found model: User (table: users)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: email ==> <StringField, varchar(50):None>
INFO:root:  found mapping: passwd ==> <StringField, varchar(50):None>
INFO:root:  found mapping: admin ==> <BooleanField, boolean:None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Blog (table: blogs)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: sort_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: summary ==> <StringField, varchar(200):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Comment (table: comments)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: blog_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Sort (table: sorts)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: class_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: updated_at ==> <FloatField, real:None>
INFO:root:  found mapping: updated_user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: updated_user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:create database connection pool...
INFO:root:init jinja2...<Application 0x7f1f1cc91ba8>
INFO:root:set jinja2 template path: /srv/awesome/www/templates
INFO:root:add_routes...handlers
INFO:root:mod...<module 'handlers' from '/srv/awesome/www-18-09-11_16.30.28/handlers.py'>
INFO:root:fn...<class 'apis.APIError'>
INFO:root:fn...<class 'apis.APIPermissionError'>
INFO:root:fn...<class 'apis.APIResourceNotFoundError'>
INFO:root:fn...<class 'apis.APIValueError'>
INFO:root:fn...<class 'models.Blog'>
INFO:root:fn...awesession
INFO:root:fn...<class 'models.Comment'>
INFO:root:fn...<class 'apis.Page'>
INFO:root:fn...<class 'models.Sort'>
INFO:root:fn...<class 'models.User'>
INFO:root:fn...<function api_blogs at 0x7f1f1ccaa840>
INFO:root:add route GET /api/blogs => api_blogs(page, name, sortid, page_size)
INFO:root:fn...<function api_comments at 0x7f1f1ccaaea0>
INFO:root:add route GET /api/comments => api_comments(page)
INFO:root:fn...<function api_create_blog at 0x7f1f1ccae598>
INFO:root:add route POST /api/blogs => api_create_blog(request, name, summary, content, sort_id)
INFO:root:fn...<function api_create_comment at 0x7f1f1ccae488>
INFO:root:add route POST /api/blogs/{id}/comments => api_create_comment(id, request, content)
INFO:root:fn...<function api_create_sort at 0x7f1f1ccae8c8>
INFO:root:add route POST /api/sorts => api_create_sort(request, class_name)
INFO:root:fn...<function api_delete_blog at 0x7f1f1ccae7b8>
INFO:root:add route POST /api/blogs/{id}/delete => api_delete_blog(id, request)
INFO:root:fn...<function api_delete_comments at 0x7f1f1ccaebf8>
INFO:root:add route POST /api/comments/{id}/delete => api_delete_comments(id, request)
INFO:root:fn...<function api_delete_sort at 0x7f1f1ccaeae8>
INFO:root:add route POST /api/sorts/{id}/delete => api_delete_sort(id, request)
INFO:root:fn...<function api_delete_users at 0x7f1f1ccaee18>
INFO:root:add route POST /api/users/{id}/delete => api_delete_users(id, request)
INFO:root:fn...<function api_get_blog at 0x7f1f1ccaab70>
INFO:root:add route GET /api/blogs/{id} => api_get_blog(id, request)
INFO:root:fn...<function api_get_sort at 0x7f1f1ccaa620>
INFO:root:add route GET /api/sorts/{id} => api_get_sort(id, request)
INFO:root:fn...<function api_get_users at 0x7f1f1ccae158>
INFO:root:add route GET /api/users => api_get_users(page)
INFO:root:fn...<function api_register_user at 0x7f1f1ccae268>
INFO:root:add route POST /api/users => api_register_user(email, name, password)
INFO:root:fn...<function api_sorts at 0x7f1f1ccaa2f0>
INFO:root:add route GET /api/sorts => api_sorts(page)
INFO:root:fn...<function api_update_blog at 0x7f1f1ccae6a8>
INFO:root:add route POST /api/blogs/{id} => api_update_blog(id, request, name, summary, content, sort_id)
INFO:root:fn...<function api_update_pwd_users at 0x7f1f1cbad0d0>
INFO:root:add route POST /api/users/pwd/{id}/update => api_update_pwd_users(id, request, passwd, passwd2)
INFO:root:fn...<function api_update_sort at 0x7f1f1ccae9d8>
INFO:root:add route POST /api/sorts/{id} => api_update_sort(id, request, class_name)
INFO:root:fn...<function api_update_users at 0x7f1f1ccaed08>
INFO:root:add route POST /api/users/{id}/edit => api_update_users(id, request)
INFO:root:fn...<function api_updates_users at 0x7f1f1ccaef28>
INFO:root:add route POST /api/users/{id}/update => api_updates_users(id, request, name)
INFO:root:fn...<module 'asyncio' from '/usr/lib/python3.6/asyncio/__init__.py'>
INFO:root:fn...<function authenticate at 0x7f1f1ccae378>
INFO:root:add route POST /api/authenticate => authenticate(email, passwd)
INFO:root:fn...<module 'base64' from '/usr/lib/python3.6/base64.py'>
INFO:root:fn...<function check_admin at 0x7f1f1ccbf7b8>
INFO:root:fn...{'debug': True, 'db': {'host': '127.0.0.1', 'port': 3306, 'user': 'root', 'password': '664991558', 'db': 'awesome'}, 'session': {'secret': 'Awesome'}}
INFO:root:fn...<function cookie2user at 0x7f1f1cbad268>
INFO:root:fn...<function execute at 0x7f1f1cf33f28>
INFO:root:fn...<function get at 0x7f1f1cf34c80>
INFO:root:fn...<function get_blog at 0x7f1f1cca6e18>
INFO:root:add route GET /blog/{id} => get_blog(id, request)
INFO:root:fn...<function get_page_index at 0x7f1f1cbad158>
INFO:root:fn...<function get_pwd at 0x7f1f1ccaa0d0>
INFO:root:add route GET /pwd/{id} => get_pwd(id, request)
INFO:root:fn...<function get_user at 0x7f1f1cca6f28>
INFO:root:add route GET /user/{id} => get_user(id, request)
INFO:root:fn...<module 'hashlib' from '/usr/lib/python3.6/hashlib.py'>
INFO:root:fn...<function index at 0x7f1f1cca69d8>
INFO:root:add route GET / => index(request, page, sortid)
INFO:root:fn...<module 'json' from '/usr/lib/python3.6/json/__init__.py'>
INFO:root:fn...<module 'logging' from '/usr/lib/python3.6/logging/__init__.py'>
INFO:root:fn...<function login at 0x7f1f1cca6bf8>
INFO:root:add route GET /signin => login()
INFO:root:fn...<function manage at 0x7f1f1ccaac80>
INFO:root:add route GET /manage/ => manage()
INFO:root:fn...<function manage_blogs at 0x7f1f1ccaa730>
INFO:root:add route GET /manage/blogs => manage_blogs(page, name, request)
INFO:root:fn...<function manage_comments at 0x7f1f1ccaad90>
INFO:root:add route GET /manage/comments => manage_comments(request, page)
INFO:root:fn...<function manage_create_blog at 0x7f1f1ccaa950>
INFO:root:add route GET /manage/blogs/create => manage_create_blog(request)
INFO:root:fn...<function manage_create_sort at 0x7f1f1ccaa400>
INFO:root:add route GET /manage/sorts/create => manage_create_sort(request)
INFO:root:fn...<function manage_edit_blog at 0x7f1f1ccaaa60>
INFO:root:add route GET /manage/blogs/edit => manage_edit_blog(request, id)
INFO:root:fn...<function manage_edit_sort at 0x7f1f1ccaa510>
INFO:root:add route GET /manage/sorts/edit => manage_edit_sort(request, id)
INFO:root:fn...<function manage_sorts at 0x7f1f1ccaa1e0>
INFO:root:add route GET /manage/sorts => manage_sorts(page, request)
INFO:root:fn...<function manage_users at 0x7f1f1ccae048>
INFO:root:add route GET /manage/users => manage_users(request, page)
INFO:root:fn...<module 'markdown2' from '/srv/awesome/www-18-09-11_16.30.28/markdown2.py'>
INFO:root:fn...<function next_id at 0x7f1f1ccb0950>
INFO:root:fn...<function post at 0x7f1f1ccb0d08>
INFO:root:fn...<module 're' from '/usr/lib/python3.6/re.py'>
INFO:root:fn...<function register at 0x7f1f1cca6ae8>
INFO:root:add route GET /register => register()
INFO:root:fn...<function select at 0x7f1f1cf16048>
INFO:root:fn...<function signout at 0x7f1f1cca6d08>
INFO:root:add route GET /signout => signout(request)
INFO:root:fn...<function text2html at 0x7f1f1cbad2f0>
INFO:root:fn...<module 'time' (built-in)>
INFO:root:fn...<function user2cookie at 0x7f1f1cbad1e0>
INFO:root:fn...<module 'aiohttp.web' from '/usr/local/lib/python3.6/dist-packages/aiohttp/web.py'>
INFO:root:add static /static/ => /srv/awesome/www-18-09-11_16.30.28/static
Traceback (most recent call last):
  File "/usr/lib/python3.6/asyncio/base_events.py", line 1045, in create_server
    sock.bind(sa)
PermissionError: [Errno 13] Permission denied

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/srv/awesome/www/app.py", line 165, in <module>
    loop.run_until_complete(init(loop))
  File "/usr/lib/python3.6/asyncio/base_events.py", line 468, in run_until_complete
    return future.result()
  File "/srv/awesome/www/app.py", line 160, in init
    srv = await loop.create_server(app.make_handler(), '0.0.0.0', 80)
  File "/usr/lib/python3.6/asyncio/base_events.py", line 1049, in create_server
    % (sa, err.strerror.lower()))
PermissionError: [Errno 13] error while attempting to bind on address ('0.0.0.0', 80): permission denied
INFO:root:found model: User (table: users)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: email ==> <StringField, varchar(50):None>
INFO:root:  found mapping: passwd ==> <StringField, varchar(50):None>
INFO:root:  found mapping: admin ==> <BooleanField, boolean:None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Blog (table: blogs)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: sort_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: summary ==> <StringField, varchar(200):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Comment (table: comments)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: blog_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Sort (table: sorts)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: class_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: updated_at ==> <FloatField, real:None>
INFO:root:  found mapping: updated_user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: updated_user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:create database connection pool...
INFO:root:init jinja2...<Application 0x7f401fc5eb38>
INFO:root:set jinja2 template path: /srv/awesome/www/templates
INFO:root:add_routes...handlers
INFO:root:mod...<module 'handlers' from '/srv/awesome/www-18-09-11_16.30.28/handlers.py'>
INFO:root:fn...<class 'apis.APIError'>
INFO:root:fn...<class 'apis.APIPermissionError'>
INFO:root:fn...<class 'apis.APIResourceNotFoundError'>
INFO:root:fn...<class 'apis.APIValueError'>
INFO:root:fn...<class 'models.Blog'>
INFO:root:fn...awesession
INFO:root:fn...<class 'models.Comment'>
INFO:root:fn...<class 'apis.Page'>
INFO:root:fn...<class 'models.Sort'>
INFO:root:fn...<class 'models.User'>
INFO:root:fn...<function api_blogs at 0x7f401fc75840>
INFO:root:add route GET /api/blogs => api_blogs(page, name, sortid, page_size)
INFO:root:fn...<function api_comments at 0x7f401fc75ea0>
INFO:root:add route GET /api/comments => api_comments(page)
INFO:root:fn...<function api_create_blog at 0x7f401fc78598>
INFO:root:add route POST /api/blogs => api_create_blog(request, name, summary, content, sort_id)
INFO:root:fn...<function api_create_comment at 0x7f401fc78488>
INFO:root:add route POST /api/blogs/{id}/comments => api_create_comment(id, request, content)
INFO:root:fn...<function api_create_sort at 0x7f401fc788c8>
INFO:root:add route POST /api/sorts => api_create_sort(request, class_name)
INFO:root:fn...<function api_delete_blog at 0x7f401fc787b8>
INFO:root:add route POST /api/blogs/{id}/delete => api_delete_blog(id, request)
INFO:root:fn...<function api_delete_comments at 0x7f401fc78bf8>
INFO:root:add route POST /api/comments/{id}/delete => api_delete_comments(id, request)
INFO:root:fn...<function api_delete_sort at 0x7f401fc78ae8>
INFO:root:add route POST /api/sorts/{id}/delete => api_delete_sort(id, request)
INFO:root:fn...<function api_delete_users at 0x7f401fc78e18>
INFO:root:add route POST /api/users/{id}/delete => api_delete_users(id, request)
INFO:root:fn...<function api_get_blog at 0x7f401fc75b70>
INFO:root:add route GET /api/blogs/{id} => api_get_blog(id, request)
INFO:root:fn...<function api_get_sort at 0x7f401fc75620>
INFO:root:add route GET /api/sorts/{id} => api_get_sort(id, request)
INFO:root:fn...<function api_get_users at 0x7f401fc78158>
INFO:root:add route GET /api/users => api_get_users(page)
INFO:root:fn...<function api_register_user at 0x7f401fc78268>
INFO:root:add route POST /api/users => api_register_user(email, name, password)
INFO:root:fn...<function api_sorts at 0x7f401fc752f0>
INFO:root:add route GET /api/sorts => api_sorts(page)
INFO:root:fn...<function api_update_blog at 0x7f401fc786a8>
INFO:root:add route POST /api/blogs/{id} => api_update_blog(id, request, name, summary, content, sort_id)
INFO:root:fn...<function api_update_pwd_users at 0x7f401fb0b0d0>
INFO:root:add route POST /api/users/pwd/{id}/update => api_update_pwd_users(id, request, passwd, passwd2)
INFO:root:fn...<function api_update_sort at 0x7f401fc789d8>
INFO:root:add route POST /api/sorts/{id} => api_update_sort(id, request, class_name)
INFO:root:fn...<function api_update_users at 0x7f401fc78d08>
INFO:root:add route POST /api/users/{id}/edit => api_update_users(id, request)
INFO:root:fn...<function api_updates_users at 0x7f401fc78f28>
INFO:root:add route POST /api/users/{id}/update => api_updates_users(id, request, name)
INFO:root:fn...<module 'asyncio' from '/usr/lib/python3.6/asyncio/__init__.py'>
INFO:root:fn...<function authenticate at 0x7f401fc78378>
INFO:root:add route POST /api/authenticate => authenticate(email, passwd)
INFO:root:fn...<module 'base64' from '/usr/lib/python3.6/base64.py'>
INFO:root:fn...<function check_admin at 0x7f401fc8a7b8>
INFO:root:fn...{'debug': True, 'db': {'host': '127.0.0.1', 'port': 3306, 'user': 'root', 'password': '664991558', 'db': 'awesome'}, 'session': {'secret': 'Awesome'}}
INFO:root:fn...<function cookie2user at 0x7f401fb0b268>
INFO:root:fn...<function execute at 0x7f401fefef28>
INFO:root:fn...<function get at 0x7f401feffc80>
INFO:root:fn...<function get_blog at 0x7f401fc71e18>
INFO:root:add route GET /blog/{id} => get_blog(id, request)
INFO:root:fn...<function get_page_index at 0x7f401fb0b158>
INFO:root:fn...<function get_pwd at 0x7f401fc750d0>
INFO:root:add route GET /pwd/{id} => get_pwd(id, request)
INFO:root:fn...<function get_user at 0x7f401fc71f28>
INFO:root:add route GET /user/{id} => get_user(id, request)
INFO:root:fn...<module 'hashlib' from '/usr/lib/python3.6/hashlib.py'>
INFO:root:fn...<function index at 0x7f401fc719d8>
INFO:root:add route GET / => index(request, page, sortid)
INFO:root:fn...<module 'json' from '/usr/lib/python3.6/json/__init__.py'>
INFO:root:fn...<module 'logging' from '/usr/lib/python3.6/logging/__init__.py'>
INFO:root:fn...<function login at 0x7f401fc71bf8>
INFO:root:add route GET /signin => login()
INFO:root:fn...<function manage at 0x7f401fc75c80>
INFO:root:add route GET /manage/ => manage()
INFO:root:fn...<function manage_blogs at 0x7f401fc75730>
INFO:root:add route GET /manage/blogs => manage_blogs(page, name, request)
INFO:root:fn...<function manage_comments at 0x7f401fc75d90>
INFO:root:add route GET /manage/comments => manage_comments(request, page)
INFO:root:fn...<function manage_create_blog at 0x7f401fc75950>
INFO:root:add route GET /manage/blogs/create => manage_create_blog(request)
INFO:root:fn...<function manage_create_sort at 0x7f401fc75400>
INFO:root:add route GET /manage/sorts/create => manage_create_sort(request)
INFO:root:fn...<function manage_edit_blog at 0x7f401fc75a60>
INFO:root:add route GET /manage/blogs/edit => manage_edit_blog(request, id)
INFO:root:fn...<function manage_edit_sort at 0x7f401fc75510>
INFO:root:add route GET /manage/sorts/edit => manage_edit_sort(request, id)
INFO:root:fn...<function manage_sorts at 0x7f401fc751e0>
INFO:root:add route GET /manage/sorts => manage_sorts(page, request)
INFO:root:fn...<function manage_users at 0x7f401fc78048>
INFO:root:add route GET /manage/users => manage_users(request, page)
INFO:root:fn...<module 'markdown2' from '/srv/awesome/www-18-09-11_16.30.28/markdown2.py'>
INFO:root:fn...<function next_id at 0x7f401fc7a950>
INFO:root:fn...<function post at 0x7f401fc7ad08>
INFO:root:fn...<module 're' from '/usr/lib/python3.6/re.py'>
INFO:root:fn...<function register at 0x7f401fc71ae8>
INFO:root:add route GET /register => register()
INFO:root:fn...<function select at 0x7f401fee0048>
INFO:root:fn...<function signout at 0x7f401fc71d08>
INFO:root:add route GET /signout => signout(request)
INFO:root:fn...<function text2html at 0x7f401fb0b2f0>
INFO:root:fn...<module 'time' (built-in)>
INFO:root:fn...<function user2cookie at 0x7f401fb0b1e0>
INFO:root:fn...<module 'aiohttp.web' from '/usr/local/lib/python3.6/dist-packages/aiohttp/web.py'>
INFO:root:add static /static/ => /srv/awesome/www-18-09-11_16.30.28/static
Traceback (most recent call last):
  File "/usr/lib/python3.6/asyncio/base_events.py", line 1045, in create_server
    sock.bind(sa)
PermissionError: [Errno 13] Permission denied

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/srv/awesome/www/app.py", line 165, in <module>
    loop.run_until_complete(init(loop))
  File "/usr/lib/python3.6/asyncio/base_events.py", line 468, in run_until_complete
    return future.result()
  File "/srv/awesome/www/app.py", line 160, in init
    srv = await loop.create_server(app.make_handler(), '0.0.0.0', 80)
  File "/usr/lib/python3.6/asyncio/base_events.py", line 1049, in create_server
    % (sa, err.strerror.lower()))
PermissionError: [Errno 13] error while attempting to bind on address ('0.0.0.0', 80): permission denied
INFO:root:found model: User (table: users)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: email ==> <StringField, varchar(50):None>
INFO:root:  found mapping: passwd ==> <StringField, varchar(50):None>
INFO:root:  found mapping: admin ==> <BooleanField, boolean:None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Blog (table: blogs)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: sort_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: summary ==> <StringField, varchar(200):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Comment (table: comments)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: blog_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Sort (table: sorts)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: class_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: updated_at ==> <FloatField, real:None>
INFO:root:  found mapping: updated_user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: updated_user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:create database connection pool...
INFO:root:init jinja2...<Application 0x7fb55f64cba8>
INFO:root:set jinja2 template path: /srv/awesome/www/templates
INFO:root:add_routes...handlers
INFO:root:mod...<module 'handlers' from '/srv/awesome/www-18-09-11_16.30.28/handlers.py'>
INFO:root:fn...<class 'apis.APIError'>
INFO:root:fn...<class 'apis.APIPermissionError'>
INFO:root:fn...<class 'apis.APIResourceNotFoundError'>
INFO:root:fn...<class 'apis.APIValueError'>
INFO:root:fn...<class 'models.Blog'>
INFO:root:fn...awesession
INFO:root:fn...<class 'models.Comment'>
INFO:root:fn...<class 'apis.Page'>
INFO:root:fn...<class 'models.Sort'>
INFO:root:fn...<class 'models.User'>
INFO:root:fn...<function api_blogs at 0x7fb55f665840>
INFO:root:add route GET /api/blogs => api_blogs(page, name, sortid, page_size)
INFO:root:fn...<function api_comments at 0x7fb55f665ea0>
INFO:root:add route GET /api/comments => api_comments(page)
INFO:root:fn...<function api_create_blog at 0x7fb55f669598>
INFO:root:add route POST /api/blogs => api_create_blog(request, name, summary, content, sort_id)
INFO:root:fn...<function api_create_comment at 0x7fb55f669488>
INFO:root:add route POST /api/blogs/{id}/comments => api_create_comment(id, request, content)
INFO:root:fn...<function api_create_sort at 0x7fb55f6698c8>
INFO:root:add route POST /api/sorts => api_create_sort(request, class_name)
INFO:root:fn...<function api_delete_blog at 0x7fb55f6697b8>
INFO:root:add route POST /api/blogs/{id}/delete => api_delete_blog(id, request)
INFO:root:fn...<function api_delete_comments at 0x7fb55f669bf8>
INFO:root:add route POST /api/comments/{id}/delete => api_delete_comments(id, request)
INFO:root:fn...<function api_delete_sort at 0x7fb55f669ae8>
INFO:root:add route POST /api/sorts/{id}/delete => api_delete_sort(id, request)
INFO:root:fn...<function api_delete_users at 0x7fb55f669e18>
INFO:root:add route POST /api/users/{id}/delete => api_delete_users(id, request)
INFO:root:fn...<function api_get_blog at 0x7fb55f665b70>
INFO:root:add route GET /api/blogs/{id} => api_get_blog(id, request)
INFO:root:fn...<function api_get_sort at 0x7fb55f665620>
INFO:root:add route GET /api/sorts/{id} => api_get_sort(id, request)
INFO:root:fn...<function api_get_users at 0x7fb55f669158>
INFO:root:add route GET /api/users => api_get_users(page)
INFO:root:fn...<function api_register_user at 0x7fb55f669268>
INFO:root:add route POST /api/users => api_register_user(email, name, password)
INFO:root:fn...<function api_sorts at 0x7fb55f6652f0>
INFO:root:add route GET /api/sorts => api_sorts(page)
INFO:root:fn...<function api_update_blog at 0x7fb55f6696a8>
INFO:root:add route POST /api/blogs/{id} => api_update_blog(id, request, name, summary, content, sort_id)
INFO:root:fn...<function api_update_pwd_users at 0x7fb55f4ff0d0>
INFO:root:add route POST /api/users/pwd/{id}/update => api_update_pwd_users(id, request, passwd, passwd2)
INFO:root:fn...<function api_update_sort at 0x7fb55f6699d8>
INFO:root:add route POST /api/sorts/{id} => api_update_sort(id, request, class_name)
INFO:root:fn...<function api_update_users at 0x7fb55f669d08>
INFO:root:add route POST /api/users/{id}/edit => api_update_users(id, request)
INFO:root:fn...<function api_updates_users at 0x7fb55f669f28>
INFO:root:add route POST /api/users/{id}/update => api_updates_users(id, request, name)
INFO:root:fn...<module 'asyncio' from '/usr/lib/python3.6/asyncio/__init__.py'>
INFO:root:fn...<function authenticate at 0x7fb55f669378>
INFO:root:add route POST /api/authenticate => authenticate(email, passwd)
INFO:root:fn...<module 'base64' from '/usr/lib/python3.6/base64.py'>
INFO:root:fn...<function check_admin at 0x7fb55f67a7b8>
INFO:root:fn...{'debug': True, 'db': {'host': '127.0.0.1', 'port': 3306, 'user': 'root', 'password': '664991558', 'db': 'awesome'}, 'session': {'secret': 'Awesome'}}
INFO:root:fn...<function cookie2user at 0x7fb55f4ff268>
INFO:root:fn...<function execute at 0x7fb55f8edf28>
INFO:root:fn...<function get at 0x7fb55f66ac80>
INFO:root:fn...<function get_blog at 0x7fb55f661e18>
INFO:root:add route GET /blog/{id} => get_blog(id, request)
INFO:root:fn...<function get_page_index at 0x7fb55f4ff158>
INFO:root:fn...<function get_pwd at 0x7fb55f6650d0>
INFO:root:add route GET /pwd/{id} => get_pwd(id, request)
INFO:root:fn...<function get_user at 0x7fb55f661f28>
INFO:root:add route GET /user/{id} => get_user(id, request)
INFO:root:fn...<module 'hashlib' from '/usr/lib/python3.6/hashlib.py'>
INFO:root:fn...<function index at 0x7fb55f6619d8>
INFO:root:add route GET / => index(request, page, sortid)
INFO:root:fn...<module 'json' from '/usr/lib/python3.6/json/__init__.py'>
INFO:root:fn...<module 'logging' from '/usr/lib/python3.6/logging/__init__.py'>
INFO:root:fn...<function login at 0x7fb55f661bf8>
INFO:root:add route GET /signin => login()
INFO:root:fn...<function manage at 0x7fb55f665c80>
INFO:root:add route GET /manage/ => manage()
INFO:root:fn...<function manage_blogs at 0x7fb55f665730>
INFO:root:add route GET /manage/blogs => manage_blogs(page, name, request)
INFO:root:fn...<function manage_comments at 0x7fb55f665d90>
INFO:root:add route GET /manage/comments => manage_comments(request, page)
INFO:root:fn...<function manage_create_blog at 0x7fb55f665950>
INFO:root:add route GET /manage/blogs/create => manage_create_blog(request)
INFO:root:fn...<function manage_create_sort at 0x7fb55f665400>
INFO:root:add route GET /manage/sorts/create => manage_create_sort(request)
INFO:root:fn...<function manage_edit_blog at 0x7fb55f665a60>
INFO:root:add route GET /manage/blogs/edit => manage_edit_blog(request, id)
INFO:root:fn...<function manage_edit_sort at 0x7fb55f665510>
INFO:root:add route GET /manage/sorts/edit => manage_edit_sort(request, id)
INFO:root:fn...<function manage_sorts at 0x7fb55f6651e0>
INFO:root:add route GET /manage/sorts => manage_sorts(page, request)
INFO:root:fn...<function manage_users at 0x7fb55f669048>
INFO:root:add route GET /manage/users => manage_users(request, page)
INFO:root:fn...<module 'markdown2' from '/srv/awesome/www-18-09-11_16.30.28/markdown2.py'>
INFO:root:fn...<function next_id at 0x7fb55f66b950>
INFO:root:fn...<function post at 0x7fb55f66bd08>
INFO:root:fn...<module 're' from '/usr/lib/python3.6/re.py'>
INFO:root:fn...<function register at 0x7fb55f661ae8>
INFO:root:add route GET /register => register()
INFO:root:fn...<function select at 0x7fb55f8d1048>
INFO:root:fn...<function signout at 0x7fb55f661d08>
INFO:root:add route GET /signout => signout(request)
INFO:root:fn...<function text2html at 0x7fb55f4ff2f0>
INFO:root:fn...<module 'time' (built-in)>
INFO:root:fn...<function user2cookie at 0x7fb55f4ff1e0>
INFO:root:fn...<module 'aiohttp.web' from '/usr/local/lib/python3.6/dist-packages/aiohttp/web.py'>
INFO:root:add static /static/ => /srv/awesome/www-18-09-11_16.30.28/static
Traceback (most recent call last):
  File "/usr/lib/python3.6/asyncio/base_events.py", line 1045, in create_server
    sock.bind(sa)
PermissionError: [Errno 13] Permission denied

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/srv/awesome/www/app.py", line 165, in <module>
    loop.run_until_complete(init(loop))
  File "/usr/lib/python3.6/asyncio/base_events.py", line 468, in run_until_complete
    return future.result()
  File "/srv/awesome/www/app.py", line 160, in init
    srv = await loop.create_server(app.make_handler(), '0.0.0.0', 80)
  File "/usr/lib/python3.6/asyncio/base_events.py", line 1049, in create_server
    % (sa, err.strerror.lower()))
PermissionError: [Errno 13] error while attempting to bind on address ('0.0.0.0', 80): permission denied
INFO:root:found model: User (table: users)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: email ==> <StringField, varchar(50):None>
INFO:root:  found mapping: passwd ==> <StringField, varchar(50):None>
INFO:root:  found mapping: admin ==> <BooleanField, boolean:None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Blog (table: blogs)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: sort_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: summary ==> <StringField, varchar(200):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Comment (table: comments)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: blog_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Sort (table: sorts)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: class_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: updated_at ==> <FloatField, real:None>
INFO:root:  found mapping: updated_user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: updated_user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:create database connection pool...
INFO:root:init jinja2...<Application 0x7f92e6ef7fd0>
INFO:root:set jinja2 template path: /srv/awesome/www/templates
INFO:root:add_routes...handlers
INFO:root:mod...<module 'handlers' from '/srv/awesome/www-18-09-11_16.33.39/handlers.py'>
INFO:root:fn...<class 'apis.APIError'>
INFO:root:fn...<class 'apis.APIPermissionError'>
INFO:root:fn...<class 'apis.APIResourceNotFoundError'>
INFO:root:fn...<class 'apis.APIValueError'>
INFO:root:fn...<class 'models.Blog'>
INFO:root:fn...awesession
INFO:root:fn...<class 'models.Comment'>
INFO:root:fn...<class 'apis.Page'>
INFO:root:fn...<class 'models.Sort'>
INFO:root:fn...<class 'models.User'>
INFO:root:fn...<function api_blogs at 0x7f92e6f07598>
INFO:root:add route GET /api/blogs => api_blogs(page, name, sortid, page_size)
INFO:root:fn...<function api_comments at 0x7f92e6f07bf8>
INFO:root:add route GET /api/comments => api_comments(page)
INFO:root:fn...<function api_create_blog at 0x7f92e6f0b2f0>
INFO:root:add route POST /api/blogs => api_create_blog(request, name, summary, content, sort_id)
INFO:root:fn...<function api_create_comment at 0x7f92e6f0b1e0>
INFO:root:add route POST /api/blogs/{id}/comments => api_create_comment(id, request, content)
INFO:root:fn...<function api_create_sort at 0x7f92e6f0b620>
INFO:root:add route POST /api/sorts => api_create_sort(request, class_name)
INFO:root:fn...<function api_delete_blog at 0x7f92e6f0b510>
INFO:root:add route POST /api/blogs/{id}/delete => api_delete_blog(id, request)
INFO:root:fn...<function api_delete_comments at 0x7f92e6f0b950>
INFO:root:add route POST /api/comments/{id}/delete => api_delete_comments(id, request)
INFO:root:fn...<function api_delete_sort at 0x7f92e6f0b840>
INFO:root:add route POST /api/sorts/{id}/delete => api_delete_sort(id, request)
INFO:root:fn...<function api_delete_users at 0x7f92e6f0bb70>
INFO:root:add route POST /api/users/{id}/delete => api_delete_users(id, request)
INFO:root:fn...<function api_get_blog at 0x7f92e6f078c8>
INFO:root:add route GET /api/blogs/{id} => api_get_blog(id, request)
INFO:root:fn...<function api_get_sort at 0x7f92e6f07378>
INFO:root:add route GET /api/sorts/{id} => api_get_sort(id, request)
INFO:root:fn...<function api_get_users at 0x7f92e6f07e18>
INFO:root:add route GET /api/users => api_get_users(page)
INFO:root:fn...<function api_register_user at 0x7f92e6f07f28>
INFO:root:add route POST /api/users => api_register_user(email, name, password)
INFO:root:fn...<function api_sorts at 0x7f92e6f07048>
INFO:root:add route GET /api/sorts => api_sorts(page)
INFO:root:fn...<function api_update_blog at 0x7f92e6f0b400>
INFO:root:add route POST /api/blogs/{id} => api_update_blog(id, request, name, summary, content, sort_id)
INFO:root:fn...<function api_update_pwd_users at 0x7f92e6f0bd90>
INFO:root:add route POST /api/users/pwd/{id}/update => api_update_pwd_users(id, request, passwd, passwd2)
INFO:root:fn...<function api_update_sort at 0x7f92e6f0b730>
INFO:root:add route POST /api/sorts/{id} => api_update_sort(id, request, class_name)
INFO:root:fn...<function api_update_users at 0x7f92e6f0ba60>
INFO:root:add route POST /api/users/{id}/edit => api_update_users(id, request)
INFO:root:fn...<function api_updates_users at 0x7f92e6f0bc80>
INFO:root:add route POST /api/users/{id}/update => api_updates_users(id, request, name)
INFO:root:fn...<module 'asyncio' from '/usr/lib/python3.6/asyncio/__init__.py'>
INFO:root:fn...<function authenticate at 0x7f92e6f0b0d0>
INFO:root:add route POST /api/authenticate => authenticate(email, passwd)
INFO:root:fn...<module 'base64' from '/usr/lib/python3.6/base64.py'>
INFO:root:fn...<function check_admin at 0x7f92e722b620>
INFO:root:fn...{'debug': True, 'db': {'host': '127.0.0.1', 'port': 3306, 'user': 'root', 'password': '664991558', 'db': 'awesome'}, 'session': {'secret': 'Awesome'}}
INFO:root:fn...<function cookie2user at 0x7f92e6f0bf28>
INFO:root:fn...<function execute at 0x7f92e7495d90>
INFO:root:fn...<function get at 0x7f92e7497ae8>
INFO:root:fn...<function get_blog at 0x7f92e6f05b70>
INFO:root:add route GET /blog/{id} => get_blog(id, request)
INFO:root:fn...<function get_page_index at 0x7f92e6f0be18>
INFO:root:fn...<function get_pwd at 0x7f92e6f05d90>
INFO:root:add route GET /pwd/{id} => get_pwd(id, request)
INFO:root:fn...<function get_user at 0x7f92e6f05c80>
INFO:root:add route GET /user/{id} => get_user(id, request)
INFO:root:fn...<module 'hashlib' from '/usr/lib/python3.6/hashlib.py'>
INFO:root:fn...<function index at 0x7f92e6f05730>
INFO:root:add route GET / => index(request, page, sortid)
INFO:root:fn...<module 'json' from '/usr/lib/python3.6/json/__init__.py'>
INFO:root:fn...<module 'logging' from '/usr/lib/python3.6/logging/__init__.py'>
INFO:root:fn...<function login at 0x7f92e6f05950>
INFO:root:add route GET /signin => login()
INFO:root:fn...<function manage at 0x7f92e6f079d8>
INFO:root:add route GET /manage/ => manage()
INFO:root:fn...<function manage_blogs at 0x7f92e6f07488>
INFO:root:add route GET /manage/blogs => manage_blogs(page, name, request)
INFO:root:fn...<function manage_comments at 0x7f92e6f07ae8>
INFO:root:add route GET /manage/comments => manage_comments(request, page)
INFO:root:fn...<function manage_create_blog at 0x7f92e6f076a8>
INFO:root:add route GET /manage/blogs/create => manage_create_blog(request)
INFO:root:fn...<function manage_create_sort at 0x7f92e6f07158>
INFO:root:add route GET /manage/sorts/create => manage_create_sort(request)
INFO:root:fn...<function manage_edit_blog at 0x7f92e6f077b8>
INFO:root:add route GET /manage/blogs/edit => manage_edit_blog(request, id)
INFO:root:fn...<function manage_edit_sort at 0x7f92e6f07268>
INFO:root:add route GET /manage/sorts/edit => manage_edit_sort(request, id)
INFO:root:fn...<function manage_sorts at 0x7f92e6f05ea0>
INFO:root:add route GET /manage/sorts => manage_sorts(page, request)
INFO:root:fn...<function manage_users at 0x7f92e6f07d08>
INFO:root:add route GET /manage/users => manage_users(request, page)
INFO:root:fn...<module 'markdown2' from '/srv/awesome/www-18-09-11_16.33.39/markdown2.py'>
INFO:root:fn...<function next_id at 0x7f92e72147b8>
INFO:root:fn...<function post at 0x7f92e7214b70>
INFO:root:fn...<module 're' from '/usr/lib/python3.6/re.py'>
INFO:root:fn...<function register at 0x7f92e6f05840>
INFO:root:add route GET /register => register()
INFO:root:fn...<function select at 0x7f92e746de18>
INFO:root:fn...<function signout at 0x7f92e6f05a60>
INFO:root:add route GET /signout => signout(request)
INFO:root:fn...<function text2html at 0x7f92e6f0f048>
INFO:root:fn...<module 'time' (built-in)>
INFO:root:fn...<function user2cookie at 0x7f92e6f0bea0>
INFO:root:fn...<module 'aiohttp.web' from '/usr/local/lib/python3.6/dist-packages/aiohttp/web.py'>
INFO:root:add static /static/ => /srv/awesome/www-18-09-11_16.33.39/static
INFO:root:server started at http://127.0.0.1:9000...
INFO:root:found model: User (table: users)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: email ==> <StringField, varchar(50):None>
INFO:root:  found mapping: passwd ==> <StringField, varchar(50):None>
INFO:root:  found mapping: admin ==> <BooleanField, boolean:None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Blog (table: blogs)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: sort_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: summary ==> <StringField, varchar(200):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Comment (table: comments)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: blog_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Sort (table: sorts)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: class_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: updated_at ==> <FloatField, real:None>
INFO:root:  found mapping: updated_user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: updated_user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:create database connection pool...
INFO:root:init jinja2...<Application 0x7fcb24afd048>
INFO:root:set jinja2 template path: /srv/awesome/www/templates
INFO:root:add_routes...handlers
INFO:root:mod...<module 'handlers' from '/srv/awesome/www-18-09-11_16.40.20/handlers.py'>
INFO:root:fn...<class 'apis.APIError'>
INFO:root:fn...<class 'apis.APIPermissionError'>
INFO:root:fn...<class 'apis.APIResourceNotFoundError'>
INFO:root:fn...<class 'apis.APIValueError'>
INFO:root:fn...<class 'models.Blog'>
INFO:root:fn...awesession
INFO:root:fn...<class 'models.Comment'>
INFO:root:fn...<class 'apis.Page'>
INFO:root:fn...<class 'models.Sort'>
INFO:root:fn...<class 'models.User'>
INFO:root:fn...<function api_blogs at 0x7fcb248f1598>
INFO:root:add route GET /api/blogs => api_blogs(page, name, sortid, page_size)
INFO:root:fn...<function api_comments at 0x7fcb248f1bf8>
INFO:root:add route GET /api/comments => api_comments(page)
INFO:root:fn...<function api_create_blog at 0x7fcb248f52f0>
INFO:root:add route POST /api/blogs => api_create_blog(request, name, summary, content, sort_id)
INFO:root:fn...<function api_create_comment at 0x7fcb248f51e0>
INFO:root:add route POST /api/blogs/{id}/comments => api_create_comment(id, request, content)
INFO:root:fn...<function api_create_sort at 0x7fcb248f5620>
INFO:root:add route POST /api/sorts => api_create_sort(request, class_name)
INFO:root:fn...<function api_delete_blog at 0x7fcb248f5510>
INFO:root:add route POST /api/blogs/{id}/delete => api_delete_blog(id, request)
INFO:root:fn...<function api_delete_comments at 0x7fcb248f5950>
INFO:root:add route POST /api/comments/{id}/delete => api_delete_comments(id, request)
INFO:root:fn...<function api_delete_sort at 0x7fcb248f5840>
INFO:root:add route POST /api/sorts/{id}/delete => api_delete_sort(id, request)
INFO:root:fn...<function api_delete_users at 0x7fcb248f5b70>
INFO:root:add route POST /api/users/{id}/delete => api_delete_users(id, request)
INFO:root:fn...<function api_get_blog at 0x7fcb248f18c8>
INFO:root:add route GET /api/blogs/{id} => api_get_blog(id, request)
INFO:root:fn...<function api_get_sort at 0x7fcb248f1378>
INFO:root:add route GET /api/sorts/{id} => api_get_sort(id, request)
INFO:root:fn...<function api_get_users at 0x7fcb248f1e18>
INFO:root:add route GET /api/users => api_get_users(page)
INFO:root:fn...<function api_register_user at 0x7fcb248f1f28>
INFO:root:add route POST /api/users => api_register_user(email, name, password)
INFO:root:fn...<function api_sorts at 0x7fcb248f1048>
INFO:root:add route GET /api/sorts => api_sorts(page)
INFO:root:fn...<function api_update_blog at 0x7fcb248f5400>
INFO:root:add route POST /api/blogs/{id} => api_update_blog(id, request, name, summary, content, sort_id)
INFO:root:fn...<function api_update_pwd_users at 0x7fcb248f5d90>
INFO:root:add route POST /api/users/pwd/{id}/update => api_update_pwd_users(id, request, passwd, passwd2)
INFO:root:fn...<function api_update_sort at 0x7fcb248f5730>
INFO:root:add route POST /api/sorts/{id} => api_update_sort(id, request, class_name)
INFO:root:fn...<function api_update_users at 0x7fcb248f5a60>
INFO:root:add route POST /api/users/{id}/edit => api_update_users(id, request)
INFO:root:fn...<function api_updates_users at 0x7fcb248f5c80>
INFO:root:add route POST /api/users/{id}/update => api_updates_users(id, request, name)
INFO:root:fn...<module 'asyncio' from '/usr/lib/python3.6/asyncio/__init__.py'>
INFO:root:fn...<function authenticate at 0x7fcb248f50d0>
INFO:root:add route POST /api/authenticate => authenticate(email, passwd)
INFO:root:fn...<module 'base64' from '/usr/lib/python3.6/base64.py'>
INFO:root:fn...<function check_admin at 0x7fcb24c10620>
INFO:root:fn...{'debug': True, 'db': {'host': '127.0.0.1', 'port': 3306, 'user': 'root', 'password': '664991558', 'db': 'awesome'}, 'session': {'secret': 'Awesome'}}
INFO:root:fn...<function cookie2user at 0x7fcb248f5f28>
INFO:root:fn...<function execute at 0x7fcb24e7fd90>
INFO:root:fn...<function get at 0x7fcb24e80ae8>
INFO:root:fn...<function get_blog at 0x7fcb248efb70>
INFO:root:add route GET /blog/{id} => get_blog(id, request)
INFO:root:fn...<function get_page_index at 0x7fcb248f5e18>
INFO:root:fn...<function get_pwd at 0x7fcb248efd90>
INFO:root:add route GET /pwd/{id} => get_pwd(id, request)
INFO:root:fn...<function get_user at 0x7fcb248efc80>
INFO:root:add route GET /user/{id} => get_user(id, request)
INFO:root:fn...<module 'hashlib' from '/usr/lib/python3.6/hashlib.py'>
INFO:root:fn...<function index at 0x7fcb248ef730>
INFO:root:add route GET / => index(request, page, sortid)
INFO:root:fn...<module 'json' from '/usr/lib/python3.6/json/__init__.py'>
INFO:root:fn...<module 'logging' from '/usr/lib/python3.6/logging/__init__.py'>
INFO:root:fn...<function login at 0x7fcb248ef950>
INFO:root:add route GET /signin => login()
INFO:root:fn...<function manage at 0x7fcb248f19d8>
INFO:root:add route GET /manage/ => manage()
INFO:root:fn...<function manage_blogs at 0x7fcb248f1488>
INFO:root:add route GET /manage/blogs => manage_blogs(page, name, request)
INFO:root:fn...<function manage_comments at 0x7fcb248f1ae8>
INFO:root:add route GET /manage/comments => manage_comments(request, page)
INFO:root:fn...<function manage_create_blog at 0x7fcb248f16a8>
INFO:root:add route GET /manage/blogs/create => manage_create_blog(request)
INFO:root:fn...<function manage_create_sort at 0x7fcb248f1158>
INFO:root:add route GET /manage/sorts/create => manage_create_sort(request)
INFO:root:fn...<function manage_edit_blog at 0x7fcb248f17b8>
INFO:root:add route GET /manage/blogs/edit => manage_edit_blog(request, id)
INFO:root:fn...<function manage_edit_sort at 0x7fcb248f1268>
INFO:root:add route GET /manage/sorts/edit => manage_edit_sort(request, id)
INFO:root:fn...<function manage_sorts at 0x7fcb248efea0>
INFO:root:add route GET /manage/sorts => manage_sorts(page, request)
INFO:root:fn...<function manage_users at 0x7fcb248f1d08>
INFO:root:add route GET /manage/users => manage_users(request, page)
INFO:root:fn...<module 'markdown2' from '/srv/awesome/www-18-09-11_16.40.20/markdown2.py'>
INFO:root:fn...<function next_id at 0x7fcb24bfe7b8>
INFO:root:fn...<function post at 0x7fcb24bfeb70>
INFO:root:fn...<module 're' from '/usr/lib/python3.6/re.py'>
INFO:root:fn...<function register at 0x7fcb248ef840>
INFO:root:add route GET /register => register()
INFO:root:fn...<function select at 0x7fcb24e57e18>
INFO:root:fn...<function signout at 0x7fcb248efa60>
INFO:root:add route GET /signout => signout(request)
INFO:root:fn...<function text2html at 0x7fcb248f9048>
INFO:root:fn...<module 'time' (built-in)>
INFO:root:fn...<function user2cookie at 0x7fcb248f5ea0>
INFO:root:fn...<module 'aiohttp.web' from '/usr/local/lib/python3.6/dist-packages/aiohttp/web.py'>
INFO:root:add static /static/ => /srv/awesome/www-18-09-11_16.40.20/static
INFO:root:server started at http://0.0.0.0:9000...
INFO:root:Request: GET /
INFO:root:check user: GET /
INFO:root:Response handler...
INFO:root:call with args: {'request': <Request GET / >}
INFO:root:SQL: select id,class_name,(select count(1) from blogs where sort_id=sorts.id) as nums  from `sorts` order by created_at desc
INFO:root:sql888888888:select id,class_name,(select count(1) from blogs where sort_id=sorts.id) as nums  from `sorts` order by created_at desc[]
ERROR:aiohttp.server:Error handling request
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/aiohttp/web_protocol.py", line 390, in start
    resp = await self._request_handler(request)
  File "/usr/local/lib/python3.6/dist-packages/aiohttp/web_app.py", line 366, in _handle
    resp = await handler(request)
  File "/usr/local/lib/python3.6/dist-packages/aiohttp/web_middlewares.py", line 106, in impl
    return await handler(request)
  File "/srv/awesome/www/app.py", line 46, in logger
    return (await handler(request))
  File "/srv/awesome/www/app.py", line 114, in auth
    return (await handler(request))
  File "/srv/awesome/www/app.py", line 65, in response
    r = await handler(request)
  File "/usr/local/lib/python3.6/dist-packages/aiohttp/web_urldispatcher.py", line 120, in handler_wrapper
    result = await result
  File "/srv/awesome/www-18-09-11_16.40.20/coroweb.py", line 161, in __call__
    r = await self._func(**kw)
  File "/usr/lib/python3.6/asyncio/coroutines.py", line 225, in coro
    res = yield from await_meth()
  File "/srv/awesome/www-18-09-11_16.40.20/handlers.py", line 79, in index
    sorts = await Sort.finddefineAll(sorts_sql, orderBy='created_at desc')
  File "/srv/awesome/www-18-09-11_16.40.20/orm.py", line 244, in finddefineAll
    rs = await select(' '.join(sql), args)
  File "/srv/awesome/www-18-09-11_16.40.20/orm.py", line 34, in select
    await cur.execute(sql.replace('?', '%s'), args or ())
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/cursors.py", line 237, in execute
    await self._query(query)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/cursors.py", line 455, in _query
    await conn.query(q)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 420, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 607, in _read_query_result
    await result.read()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 1089, in read
    first_packet = await self.connection._read_packet()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 578, in _read_packet
    packet.check_error()
  File "/usr/local/lib/python3.6/dist-packages/pymysql/protocol.py", line 220, in check_error
    err.raise_mysql_exception(self._data)
  File "/usr/local/lib/python3.6/dist-packages/pymysql/err.py", line 109, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.OperationalError: (1142, "SELECT command denied to user 'gdk'@'localhost' for table 'sorts'")
INFO:aiohttp.access:192.168.189.1 [11/Sep/2018:15:41:20 +0000] "GET / HTTP/1.1" 500 330 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:62.0) Gecko/20100101 Firefox/62.0"
INFO:root:Request: GET /
INFO:root:check user: GET /
INFO:root:Response handler...
INFO:root:call with args: {'request': <Request GET / >}
INFO:root:SQL: select id,class_name,(select count(1) from blogs where sort_id=sorts.id) as nums  from `sorts` order by created_at desc
INFO:root:sql888888888:select id,class_name,(select count(1) from blogs where sort_id=sorts.id) as nums  from `sorts` order by created_at desc[]
ERROR:aiohttp.server:Error handling request
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/aiohttp/web_protocol.py", line 390, in start
    resp = await self._request_handler(request)
  File "/usr/local/lib/python3.6/dist-packages/aiohttp/web_app.py", line 366, in _handle
    resp = await handler(request)
  File "/usr/local/lib/python3.6/dist-packages/aiohttp/web_middlewares.py", line 106, in impl
    return await handler(request)
  File "/srv/awesome/www/app.py", line 46, in logger
    return (await handler(request))
  File "/srv/awesome/www/app.py", line 114, in auth
    return (await handler(request))
  File "/srv/awesome/www/app.py", line 65, in response
    r = await handler(request)
  File "/usr/local/lib/python3.6/dist-packages/aiohttp/web_urldispatcher.py", line 120, in handler_wrapper
    result = await result
  File "/srv/awesome/www-18-09-11_16.40.20/coroweb.py", line 161, in __call__
    r = await self._func(**kw)
  File "/usr/lib/python3.6/asyncio/coroutines.py", line 225, in coro
    res = yield from await_meth()
  File "/srv/awesome/www-18-09-11_16.40.20/handlers.py", line 79, in index
    sorts = await Sort.finddefineAll(sorts_sql, orderBy='created_at desc')
  File "/srv/awesome/www-18-09-11_16.40.20/orm.py", line 244, in finddefineAll
    rs = await select(' '.join(sql), args)
  File "/srv/awesome/www-18-09-11_16.40.20/orm.py", line 34, in select
    await cur.execute(sql.replace('?', '%s'), args or ())
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/cursors.py", line 237, in execute
    await self._query(query)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/cursors.py", line 455, in _query
    await conn.query(q)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 420, in query
    await self._read_query_result(unbuffered=unbuffered)
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 607, in _read_query_result
    await result.read()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 1089, in read
    first_packet = await self.connection._read_packet()
  File "/usr/local/lib/python3.6/dist-packages/aiomysql/connection.py", line 578, in _read_packet
    packet.check_error()
  File "/usr/local/lib/python3.6/dist-packages/pymysql/protocol.py", line 220, in check_error
    err.raise_mysql_exception(self._data)
  File "/usr/local/lib/python3.6/dist-packages/pymysql/err.py", line 109, in raise_mysql_exception
    raise errorclass(errno, errval)
pymysql.err.OperationalError: (1142, "SELECT command denied to user 'gdk'@'localhost' for table 'sorts'")
INFO:aiohttp.access:192.168.189.1 [11/Sep/2018:15:42:44 +0000] "GET / HTTP/1.1" 500 330 "-" "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:62.0) Gecko/20100101 Firefox/62.0"
INFO:root:found model: User (table: users)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: email ==> <StringField, varchar(50):None>
INFO:root:  found mapping: passwd ==> <StringField, varchar(50):None>
INFO:root:  found mapping: admin ==> <BooleanField, boolean:None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Blog (table: blogs)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: sort_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: summary ==> <StringField, varchar(200):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Comment (table: comments)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: blog_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Sort (table: sorts)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: class_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: updated_at ==> <FloatField, real:None>
INFO:root:  found mapping: updated_user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: updated_user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:create database connection pool...
INFO:root:init jinja2...<Application 0x7f09db4faba8>
INFO:root:set jinja2 template path: /srv/awesome/www/templates
INFO:root:add_routes...handlers
INFO:root:mod...<module 'handlers' from '/srv/awesome/www-18-09-11_16.40.20/handlers.py'>
INFO:root:fn...<class 'apis.APIError'>
INFO:root:fn...<class 'apis.APIPermissionError'>
INFO:root:fn...<class 'apis.APIResourceNotFoundError'>
INFO:root:fn...<class 'apis.APIValueError'>
INFO:root:fn...<class 'models.Blog'>
INFO:root:fn...awesession
INFO:root:fn...<class 'models.Comment'>
INFO:root:fn...<class 'apis.Page'>
INFO:root:fn...<class 'models.Sort'>
INFO:root:fn...<class 'models.User'>
INFO:root:fn...<function api_blogs at 0x7f09db513840>
INFO:root:add route GET /api/blogs => api_blogs(page, name, sortid, page_size)
INFO:root:fn...<function api_comments at 0x7f09db513ea0>
INFO:root:add route GET /api/comments => api_comments(page)
INFO:root:fn...<function api_create_blog at 0x7f09db517598>
INFO:root:add route POST /api/blogs => api_create_blog(request, name, summary, content, sort_id)
INFO:root:fn...<function api_create_comment at 0x7f09db517488>
INFO:root:add route POST /api/blogs/{id}/comments => api_create_comment(id, request, content)
INFO:root:fn...<function api_create_sort at 0x7f09db5178c8>
INFO:root:add route POST /api/sorts => api_create_sort(request, class_name)
INFO:root:fn...<function api_delete_blog at 0x7f09db5177b8>
INFO:root:add route POST /api/blogs/{id}/delete => api_delete_blog(id, request)
INFO:root:fn...<function api_delete_comments at 0x7f09db517bf8>
INFO:root:add route POST /api/comments/{id}/delete => api_delete_comments(id, request)
INFO:root:fn...<function api_delete_sort at 0x7f09db517ae8>
INFO:root:add route POST /api/sorts/{id}/delete => api_delete_sort(id, request)
INFO:root:fn...<function api_delete_users at 0x7f09db517e18>
INFO:root:add route POST /api/users/{id}/delete => api_delete_users(id, request)
INFO:root:fn...<function api_get_blog at 0x7f09db513b70>
INFO:root:add route GET /api/blogs/{id} => api_get_blog(id, request)
INFO:root:fn...<function api_get_sort at 0x7f09db513620>
INFO:root:add route GET /api/sorts/{id} => api_get_sort(id, request)
INFO:root:fn...<function api_get_users at 0x7f09db517158>
INFO:root:add route GET /api/users => api_get_users(page)
INFO:root:fn...<function api_register_user at 0x7f09db517268>
INFO:root:add route POST /api/users => api_register_user(email, name, password)
INFO:root:fn...<function api_sorts at 0x7f09db5132f0>
INFO:root:add route GET /api/sorts => api_sorts(page)
INFO:root:fn...<function api_update_blog at 0x7f09db5176a8>
INFO:root:add route POST /api/blogs/{id} => api_update_blog(id, request, name, summary, content, sort_id)
INFO:root:fn...<function api_update_pwd_users at 0x7f09db49c0d0>
INFO:root:add route POST /api/users/pwd/{id}/update => api_update_pwd_users(id, request, passwd, passwd2)
INFO:root:fn...<function api_update_sort at 0x7f09db5179d8>
INFO:root:add route POST /api/sorts/{id} => api_update_sort(id, request, class_name)
INFO:root:fn...<function api_update_users at 0x7f09db517d08>
INFO:root:add route POST /api/users/{id}/edit => api_update_users(id, request)
INFO:root:fn...<function api_updates_users at 0x7f09db517f28>
INFO:root:add route POST /api/users/{id}/update => api_updates_users(id, request, name)
INFO:root:fn...<module 'asyncio' from '/usr/lib/python3.6/asyncio/__init__.py'>
INFO:root:fn...<function authenticate at 0x7f09db517378>
INFO:root:add route POST /api/authenticate => authenticate(email, passwd)
INFO:root:fn...<module 'base64' from '/usr/lib/python3.6/base64.py'>
INFO:root:fn...<function check_admin at 0x7f09db5287b8>
INFO:root:fn...{'debug': True, 'db': {'host': '127.0.0.1', 'port': 3306, 'user': 'root', 'password': '664991558', 'db': 'awesome'}, 'session': {'secret': 'Awesome'}}
INFO:root:fn...<function cookie2user at 0x7f09db49c268>
INFO:root:fn...<function execute at 0x7f09db79af28>
INFO:root:fn...<function get at 0x7f09db518c80>
INFO:root:fn...<function get_blog at 0x7f09db50fe18>
INFO:root:add route GET /blog/{id} => get_blog(id, request)
INFO:root:fn...<function get_page_index at 0x7f09db49c158>
INFO:root:fn...<function get_pwd at 0x7f09db5130d0>
INFO:root:add route GET /pwd/{id} => get_pwd(id, request)
INFO:root:fn...<function get_user at 0x7f09db50ff28>
INFO:root:add route GET /user/{id} => get_user(id, request)
INFO:root:fn...<module 'hashlib' from '/usr/lib/python3.6/hashlib.py'>
INFO:root:fn...<function index at 0x7f09db50f9d8>
INFO:root:add route GET / => index(request, page, sortid)
INFO:root:fn...<module 'json' from '/usr/lib/python3.6/json/__init__.py'>
INFO:root:fn...<module 'logging' from '/usr/lib/python3.6/logging/__init__.py'>
INFO:root:fn...<function login at 0x7f09db50fbf8>
INFO:root:add route GET /signin => login()
INFO:root:fn...<function manage at 0x7f09db513c80>
INFO:root:add route GET /manage/ => manage()
INFO:root:fn...<function manage_blogs at 0x7f09db513730>
INFO:root:add route GET /manage/blogs => manage_blogs(page, name, request)
INFO:root:fn...<function manage_comments at 0x7f09db513d90>
INFO:root:add route GET /manage/comments => manage_comments(request, page)
INFO:root:fn...<function manage_create_blog at 0x7f09db513950>
INFO:root:add route GET /manage/blogs/create => manage_create_blog(request)
INFO:root:fn...<function manage_create_sort at 0x7f09db513400>
INFO:root:add route GET /manage/sorts/create => manage_create_sort(request)
INFO:root:fn...<function manage_edit_blog at 0x7f09db513a60>
INFO:root:add route GET /manage/blogs/edit => manage_edit_blog(request, id)
INFO:root:fn...<function manage_edit_sort at 0x7f09db513510>
INFO:root:add route GET /manage/sorts/edit => manage_edit_sort(request, id)
INFO:root:fn...<function manage_sorts at 0x7f09db5131e0>
INFO:root:add route GET /manage/sorts => manage_sorts(page, request)
INFO:root:fn...<function manage_users at 0x7f09db517048>
INFO:root:add route GET /manage/users => manage_users(request, page)
INFO:root:fn...<module 'markdown2' from '/srv/awesome/www-18-09-11_16.40.20/markdown2.py'>
INFO:root:fn...<function next_id at 0x7f09db519950>
INFO:root:fn...<function post at 0x7f09db519d08>
INFO:root:fn...<module 're' from '/usr/lib/python3.6/re.py'>
INFO:root:fn...<function register at 0x7f09db50fae8>
INFO:root:add route GET /register => register()
INFO:root:fn...<function select at 0x7f09db77f048>
INFO:root:fn...<function signout at 0x7f09db50fd08>
INFO:root:add route GET /signout => signout(request)
INFO:root:fn...<function text2html at 0x7f09db49c2f0>
INFO:root:fn...<module 'time' (built-in)>
INFO:root:fn...<function user2cookie at 0x7f09db49c1e0>
INFO:root:fn...<module 'aiohttp.web' from '/usr/local/lib/python3.6/dist-packages/aiohttp/web.py'>
INFO:root:add static /static/ => /srv/awesome/www-18-09-11_16.40.20/static
INFO:root:server started at http://0.0.0.0:9000...
  File "/srv/awesome/www/app.py", line 148
    await orm.create_pool(loop=loop, configs.db)
                                    ^
SyntaxError: positional argument follows keyword argument
  File "/srv/awesome/www/app.py", line 148
    await orm.create_pool(loop=loop, configs.db)
                                    ^
SyntaxError: positional argument follows keyword argument
  File "/srv/awesome/www/app.py", line 148
    await orm.create_pool(loop=loop, configs.db)
                                    ^
SyntaxError: positional argument follows keyword argument
  File "/srv/awesome/www/app.py", line 148
    await orm.create_pool(loop=loop, configs.db)
                                    ^
SyntaxError: positional argument follows keyword argument
INFO:root:found model: User (table: users)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: email ==> <StringField, varchar(50):None>
INFO:root:  found mapping: passwd ==> <StringField, varchar(50):None>
INFO:root:  found mapping: admin ==> <BooleanField, boolean:None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Blog (table: blogs)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: sort_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: summary ==> <StringField, varchar(200):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Comment (table: comments)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: blog_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: content ==> <TextField, text:None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:found model: Sort (table: sorts)
INFO:root:  found mapping: id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: class_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: user_image ==> <StringField, varchar(500):None>
INFO:root:  found mapping: updated_at ==> <FloatField, real:None>
INFO:root:  found mapping: updated_user_id ==> <StringField, varchar(50):None>
INFO:root:  found mapping: updated_user_name ==> <StringField, varchar(50):None>
INFO:root:  found mapping: created_at ==> <FloatField, real:None>
INFO:root:create database connection pool...
INFO:root:init jinja2...<Application 0x7fe087c83048>
INFO:root:set jinja2 template path: /srv/awesome/www/templates
INFO:root:add_routes...handlers
INFO:root:mod...<module 'handlers' from '/srv/awesome/www-18-09-12_04.03.41/handlers.py'>
INFO:root:fn...<class 'apis.APIError'>
INFO:root:fn...<class 'apis.APIPermissionError'>
INFO:root:fn...<class 'apis.APIResourceNotFoundError'>
INFO:root:fn...<class 'apis.APIValueError'>
INFO:root:fn...<class 'models.Blog'>
INFO:root:fn...awesession
INFO:root:fn...<class 'models.Comment'>
INFO:root:fn...<class 'apis.Page'>
INFO:root:fn...<class 'models.Sort'>
INFO:root:fn...<class 'models.User'>
INFO:root:fn...<function api_blogs at 0x7fe087a75598>
INFO:root:add route GET /api/blogs => api_blogs(page, name, sortid, page_size)
INFO:root:fn...<function api_comments at 0x7fe087a75bf8>
INFO:root:add route GET /api/comments => api_comments(page)
INFO:root:fn...<function api_create_blog at 0x7fe087a792f0>
INFO:root:add route POST /api/blogs => api_create_blog(request, name, summary, content, sort_id)
INFO:root:fn...<function api_create_comment at 0x7fe087a791e0>
INFO:root:add route POST /api/blogs/{id}/comments => api_create_comment(id, request, content)
INFO:root:fn...<function api_create_sort at 0x7fe087a79620>
INFO:root:add route POST /api/sorts => api_create_sort(request, class_name)
INFO:root:fn...<function api_delete_blog at 0x7fe087a79510>
INFO:root:add route POST /api/blogs/{id}/delete => api_delete_blog(id, request)
INFO:root:fn...<function api_delete_comments at 0x7fe087a79950>
INFO:root:add route POST /api/comments/{id}/delete => api_delete_comments(id, request)
INFO:root:fn...<function api_delete_sort at 0x7fe087a79840>
INFO:root:add route POST /api/sorts/{id}/delete => api_delete_sort(id, request)
INFO:root:fn...<function api_delete_users at 0x7fe087a79b70>
INFO:root:add route POST /api/users/{id}/delete => api_delete_users(id, request)
INFO:root:fn...<function api_get_blog at 0x7fe087a758c8>
INFO:root:add route GET /api/blogs/{id} => api_get_blog(id, request)
INFO:root:fn...<function api_get_sort at 0x7fe087a75378>
INFO:root:add route GET /api/sorts/{id} => api_get_sort(id, request)
INFO:root:fn...<function api_get_users at 0x7fe087a75e18>
INFO:root:add route GET /api/users => api_get_users(page)
INFO:root:fn...<function api_register_user at 0x7fe087a75f28>
INFO:root:add route POST /api/users => api_register_user(email, name, password)
INFO:root:fn...<function api_sorts at 0x7fe087a75048>
INFO:root:add route GET /api/sorts => api_sorts(page)
INFO:root:fn...<function api_update_blog at 0x7fe087a79400>
INFO:root:add route POST /api/blogs/{id} => api_update_blog(id, request, name, summary, content, sort_id)
INFO:root:fn...<function api_update_pwd_users at 0x7fe087a79d90>
INFO:root:add route POST /api/users/pwd/{id}/update => api_update_pwd_users(id, request, passwd, passwd2)
INFO:root:fn...<function api_update_sort at 0x7fe087a79730>
INFO:root:add route POST /api/sorts/{id} => api_update_sort(id, request, class_name)
INFO:root:fn...<function api_update_users at 0x7fe087a79a60>
INFO:root:add route POST /api/users/{id}/edit => api_update_users(id, request)
INFO:root:fn...<function api_updates_users at 0x7fe087a79c80>
INFO:root:add route POST /api/users/{id}/update => api_updates_users(id, request, name)
INFO:root:fn...<module 'asyncio' from '/usr/lib/python3.6/asyncio/__init__.py'>
INFO:root:fn...<function authenticate at 0x7fe087a790d0>
INFO:root:add route POST /api/authenticate => authenticate(email, passwd)
INFO:root:fn...<module 'base64' from '/usr/lib/python3.6/base64.py'>
INFO:root:fn...<function check_admin at 0x7fe087d91620>
INFO:root:fn...{'debug': True, 'db': {'host': '127.0.0.1', 'port': 3306, 'user': 'gdk', 'password': '123', 'db': 'awesome'}, 'session': {'secret': 'Awesome'}}
INFO:root:fn...<function cookie2user at 0x7fe087a79f28>
INFO:root:fn...<function execute at 0x7fe088003d90>
INFO:root:fn...<function get at 0x7fe088005ae8>
INFO:root:fn...<function get_blog at 0x7fe087a73b70>
INFO:root:add route GET /blog/{id} => get_blog(id, request)
INFO:root:fn...<function get_page_index at 0x7fe087a79e18>
INFO:root:fn...<function get_pwd at 0x7fe087a73d90>
INFO:root:add route GET /pwd/{id} => get_pwd(id, request)
INFO:root:fn...<function get_user at 0x7fe087a73c80>
INFO:root:add route GET /user/{id} => get_user(id, request)
INFO:root:fn...<module 'hashlib' from '/usr/lib/python3.6/hashlib.py'>
INFO:root:fn...<function index at 0x7fe087a73730>
INFO:root:add route GET / => index(request, page, sortid)
INFO:root:fn...<module 'json' from '/usr/lib/python3.6/json/__init__.py'>
INFO:root:fn...<module 'logging' from '/usr/lib/python3.6/logging/__init__.py'>
INFO:root:fn...<function login at 0x7fe087a73950>
INFO:root:add route GET /signin => login()
INFO:root:fn...<function manage at 0x7fe087a759d8>
INFO:root:add route GET /manage/ => manage()
INFO:root:fn...<function manage_blogs at 0x7fe087a75488>
INFO:root:add route GET /manage/blogs => manage_blogs(page, name, request)
INFO:root:fn...<function manage_comments at 0x7fe087a75ae8>
INFO:root:add route GET /manage/comments => manage_comments(request, page)
INFO:root:fn...<function manage_create_blog at 0x7fe087a756a8>
INFO:root:add route GET /manage/blogs/create => manage_create_blog(request)
INFO:root:fn...<function manage_create_sort at 0x7fe087a75158>
INFO:root:add route GET /manage/sorts/create => manage_create_sort(request)
INFO:root:fn...<function manage_edit_blog at 0x7fe087a757b8>
INFO:root:add route GET /manage/blogs/edit => manage_edit_blog(request, id)
INFO:root:fn...<function manage_edit_sort at 0x7fe087a75268>
INFO:root:add route GET /manage/sorts/edit => manage_edit_sort(request, id)
INFO:root:fn...<function manage_sorts at 0x7fe087a73ea0>
INFO:root:add route GET /manage/sorts => manage_sorts(page, request)
INFO:root:fn...<function manage_users at 0x7fe087a75d08>
INFO:root:add route GET /manage/users => manage_users(request, page)
INFO:root:fn...<module 'markdown2' from '/srv/awesome/www-18-09-12_04.03.41/markdown2.py'>
INFO:root:fn...<function next_id at 0x7fe087d837b8>
INFO:root:fn...<function post at 0x7fe087d83b70>
INFO:root:fn...<module 're' from '/usr/lib/python3.6/re.py'>
INFO:root:fn...<function register at 0x7fe087a73840>
INFO:root:add route GET /register => register()
INFO:root:fn...<function select at 0x7fe087fdbe18>
INFO:root:fn...<function signout at 0x7fe087a73a60>
INFO:root:add route GET /signout => signout(request)
INFO:root:fn...<function text2html at 0x7fe087a7d048>
INFO:root:fn...<module 'time' (built-in)>
INFO:root:fn...<function user2cookie at 0x7fe087a79ea0>
INFO:root:fn...<module 'aiohttp.web' from '/usr/local/lib/python3.6/dist-packages/aiohttp/web.py'>
INFO:root:add static /static/ => /srv/awesome/www-18-09-12_04.03.41/static
INFO:root:server started at http://0.0.0.0:9000...
